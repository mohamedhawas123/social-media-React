[{"/home/metro/Desktop/projects/soica-media/src/index.js":"1","/home/metro/Desktop/projects/soica-media/src/App.js":"2","/home/metro/Desktop/projects/soica-media/src/reportWebVitals.js":"3","/home/metro/Desktop/projects/soica-media/src/pages/home.js":"4","/home/metro/Desktop/projects/soica-media/src/pages/login.js":"5","/home/metro/Desktop/projects/soica-media/src/pages/signup.js":"6","/home/metro/Desktop/projects/soica-media/src/components/Navbar.js":"7","/home/metro/Desktop/projects/soica-media/src/components/Scream.js":"8","/home/metro/Desktop/projects/soica-media/src/utils/authRoute.js":"9","/home/metro/Desktop/projects/soica-media/src/store/reducers/user.js":"10","/home/metro/Desktop/projects/soica-media/src/store/reducers/urilits.js":"11","/home/metro/Desktop/projects/soica-media/src/store/actions/actionTypy.js":"12","/home/metro/Desktop/projects/soica-media/src/store/actions/user.js":"13","/home/metro/Desktop/projects/soica-media/src/store/reducers/data.js":"14","/home/metro/Desktop/projects/soica-media/src/store/actions/data.js":"15","/home/metro/Desktop/projects/soica-media/src/store/actions/token.js":"16","/home/metro/Desktop/projects/soica-media/src/components/profile.js":"17","/home/metro/Desktop/projects/soica-media/src/components/edit.js":"18","/home/metro/Desktop/projects/soica-media/src/store/actions/like.js":"19","/home/metro/Desktop/projects/soica-media/src/store/actions/sceam.js":"20","/home/metro/Desktop/projects/soica-media/src/components/deleteScream.js":"21","/home/metro/Desktop/projects/soica-media/src/store/actions/delete.js":"22"},{"size":994,"mtime":1609946494231,"results":"23","hashOfConfig":"24"},{"size":1781,"mtime":1610226583195,"results":"25","hashOfConfig":"24"},{"size":362,"mtime":1608671118339,"results":"26","hashOfConfig":"24"},{"size":1420,"mtime":1610481078911,"results":"27","hashOfConfig":"24"},{"size":4306,"mtime":1610225454014,"results":"28","hashOfConfig":"24"},{"size":5468,"mtime":1610738950428,"results":"29","hashOfConfig":"24"},{"size":2353,"mtime":1610227311281,"results":"30","hashOfConfig":"24"},{"size":4586,"mtime":1611006795387,"results":"31","hashOfConfig":"24"},{"size":340,"mtime":1609361245460,"results":"32","hashOfConfig":"24"},{"size":1855,"mtime":1610983223020,"results":"33","hashOfConfig":"24"},{"size":132,"mtime":1610726024712,"results":"34","hashOfConfig":"24"},{"size":725,"mtime":1610984927229,"results":"35","hashOfConfig":"24"},{"size":2729,"mtime":1610919409889,"results":"36","hashOfConfig":"24"},{"size":2278,"mtime":1611003077153,"results":"37","hashOfConfig":"24"},{"size":1437,"mtime":1610826387730,"results":"38","hashOfConfig":"24"},{"size":161,"mtime":1610826368642,"results":"39","hashOfConfig":"24"},{"size":8855,"mtime":1610916681828,"results":"40","hashOfConfig":"24"},{"size":4712,"mtime":1610223501160,"results":"41","hashOfConfig":"24"},{"size":1387,"mtime":1610918774583,"results":"42","hashOfConfig":"24"},{"size":718,"mtime":1610481043731,"results":"43","hashOfConfig":"24"},{"size":2792,"mtime":1611006924665,"results":"44","hashOfConfig":"24"},{"size":533,"mtime":1611002848044,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"1lvtz3k",{"filePath":"49","messages":"50","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"48"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"48"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"48"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"48"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"48"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"48"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"48"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"48"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"48"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"48"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/metro/Desktop/projects/soica-media/src/index.js",[],["101","102"],"/home/metro/Desktop/projects/soica-media/src/App.js",["103","104","105"],"import React from 'react'\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom'\nimport Home from './pages/home'\nimport login from './pages/login'\nimport Signup from './pages/signup'\nimport ButtonAppBar from './components/Navbar'\nimport './App.css'\nimport MuiThemeProvider from '@material-ui/core/styles/MuiThemeProvider'\nimport createMuiTheme from '@material-ui/core/styles/createMuiTheme'\nimport dayjs from 'dayjs'\nimport relativeTime from 'dayjs/plugin/relativeTime'\nimport jwtDecode from 'jwt-decode'\nimport AuthRoute from './utils/authRoute'\nimport {connect} from 'react-redux'\n\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      light: '#33c9dc',\n      main: '#00bcd4',\n      dark: '#008394',\n      contrastText: '#fff'\n    },\n    secondary: {\n      light: '#ff6333',\n      main: '#ff3d00',\n      dark: '#b22a00',\n      contrastText: '#fff'\n    }\n  },\n\n  typography: {\n    useNextVariants: true\n  }\n\n})\n\nlet authenticated;\n\nconst token = localStorage.IdToken\nif(token) {\n  const decodedToken = jwtDecode(token);\n  console.log(decodedToken)\n  if(decodedToken * 1000 < Date.now()) {\n    window.location.href = '/login'\n    authenticated = false\n  }else {\n    authenticated = true\n  }\n\n}\n\n\nfunction App() {\n  return (\n    <MuiThemeProvider theme={theme}>\n      <div className=\"App\">\n     <Router>\n     <ButtonAppBar />\n       <div className=\"container\">\n         \n       <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <AuthRoute exact  path=\"/signup\" component={Signup} authenticated={authenticated} />\n       <AuthRoute exact  path=\"/login\" component={login} authenticated={authenticated} />\n       \n       </Switch>\n       </div>\n      \n      \n     </Router>\n    </div>\n    </MuiThemeProvider>\n  );\n}\n\n\n\nexport default App;\n","/home/metro/Desktop/projects/soica-media/src/reportWebVitals.js",[],"/home/metro/Desktop/projects/soica-media/src/pages/home.js",["106"],"import { Grid } from '@material-ui/core'\nimport React, {Component} from 'react'\nimport axios from 'axios'\nimport Scream from '../components/Scream'\nimport {fetchData} from '../store/actions/data'\nimport {connect} from 'react-redux'\nimport Profile from '../components/profile'\nimport {fetchSCream} from '../store/actions/sceam'\n\n\n\nclass Home extends Component {\n\n    state = {\n        screams: []\n    }\n\n    componentDidMount(){\n        \n        this.props.scream()\n        this.props.fetch()\n\n\n    }\n\n    render() {\n        console.log(this.props.data)\n      \n        let recentScreamsMarkup = this.props.screams ? (\n            this.props.screams.map(post => <Scream key={post.screemId} scream={post} />)\n        ): <p>Loading...</p>\n        console.log(this.props.screams)\n        return (\n           <Grid container spacing={16} >\n               <Grid item sm={8} xs={12}>\n                   {recentScreamsMarkup}\n               </Grid>\n\n               <Grid item sm={4} xs={12}>\n                    <Profile />\n               </Grid>\n           </Grid>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        data: state.data.data,\n        screams: state.data.screams\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        fetch: () => dispatch(fetchData()),\n        scream: () => dispatch(fetchSCream())\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home)","/home/metro/Desktop/projects/soica-media/src/pages/login.js",["107"],"import React, {Component} from 'react'\nimport withStyles from '@material-ui/core/styles/withStyles'\nimport PropTypes from 'prop-types'\nimport Grid from '@material-ui/core/Grid'\nimport AppIcon from '../images/cafe.jpg'\nimport {Typography} from '@material-ui/core'\nimport TextField from '@material-ui/core/TextField'\nimport Button from '@material-ui/core/Button'\nimport axios from 'axios'\nimport Link from 'react-router-dom/Link'\nimport {CircularProgress} from '@material-ui/core'\nimport {connect} from 'react-redux'\nimport {authLogin} from '../store/actions/user'\n\nconst styles =  {\n    form : {\n        textAlign: 'center'\n    },\n    image: {\n        margin: '20px auto 20px auto'\n    },\n    pageTitle: {\n        margin: '10px auto 10px auto'\n    },\n    textField: {\n        margin: '10px auto 10px auto'\n    },\n    button: {\n        marginTop: 20,\n        position: 'relative'\n\n    },\n    customError:{\n        color: 'red',\n        fontSize: '0.8rem',\n        marginTop: 10\n    },\n    small : {\n        margin: 10\n    },\n    progress: {\n        position: 'absoluate'\n\n    }\n    \n\n}\n\n\n\n\nclass login extends Component {\n    \n    state= {\n        email: \"\",\n        password: \"\",\n        loading: false,\n        errors: {}\n    }\n\n\n\n    handleSubmit = (e) => {\n        const {email, password} =  this.state\n        e.preventDefault()\n        this.props.login(email, password)\n        this.props.history.push('/')\n        \n        \n    }\n\n    hangleChange = (e) => {\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n\n\n    render() {\n        const {classes} = this.props \n        const {errors, loading} = this.state\n        return (\n           <Grid container className={classes.form}>\n               <Grid item sm />\n               <Grid item sm>\n                    <img src={AppIcon} alt=\"monkey\" width=\"50%\" height=\"50%\" className={classes.image} />\n                    <Typography variant=\"h4\" className={classes.pageTitle}>Login</Typography>\n                    <form noValidate onSubmit={this.handleSubmit}>\n                        <TextField\n                         id=\"email\"\n                         name=\"email\"\n                          type=\"email\"\n                           label=\"Email\"\n                            className={classes.textField}\n\n                        value={this.state.email}\n                         onChange={this.hangleChange}\n                         helperText={errors.email}\n                         error={errors.email ? true: false}\n                          fullWidth />\n                    \n                    <TextField\n                     id=\"password\"\n                      name=\"password\"\n                       type=\"password\"\n                        label=\"Password\"\n                         className={classes.textField}\n                        value={this.state.password}\n                         onChange={this.hangleChange}\n                         helperText={errors.password}\n                         error={errors.password ? true: false}\n                          fullWidth />\n\n                    {errors.general && (\n                        <Typography variant=\"body2\" className={classes.customError}>\n                            {errors.general}\n                        </Typography>\n                    )}\n                    <Button type=\"submit\" variant=\"contained\" color=\"primary\" disabled={loading}  className={classes.button}>\n                        Login \n                        {loading && (\n                            <CircularProgress size={30} className={classes.progress} />\n                        )}\n                        </Button>\n                    <br />\n                    <small className=\"small\" >Don't have an account ? don't worry Sign Up <Link to=\"/signup\">Here</Link>  </small>\n                    </form>\n               </Grid>\n               <Grid item sm />\n           </Grid>\n        )\n    }\n}\n\nlogin.propTypes = {\n    classes: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.user.token\n    }\n}\n\nconst mapDispatchToProps  = dispatch => {\n    return {\n        login: (email, password) => dispatch(authLogin(email, password))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(login))\n\n","/home/metro/Desktop/projects/soica-media/src/pages/signup.js",["108"],"import React, {Component} from 'react'\nimport withStyles from '@material-ui/core/styles/withStyles'\nimport PropTypes from 'prop-types'\nimport Grid from '@material-ui/core/Grid'\nimport AppIcon from '../images/cafe.jpg'\nimport {Typography} from '@material-ui/core'\nimport TextField from '@material-ui/core/TextField'\nimport Button from '@material-ui/core/Button'\nimport axios from 'axios'\nimport Link from 'react-router-dom/Link'\nimport {CircularProgress} from '@material-ui/core'\nimport {SignUP} from '../store/actions/user'\nimport {connect} from 'react-redux'\n\n\n\nconst styles =  {\n    form : {\n        textAlign: 'center'\n    },\n    image: {\n        margin: '20px auto 20px auto'\n    },\n    pageTitle: {\n        margin: '10px auto 10px auto'\n    },\n    textField: {\n        margin: '10px auto 10px auto'\n    },\n    button: {\n        marginTop: 20,\n        position: 'relative'\n\n    },\n    customError:{\n        color: 'red',\n        fontSize: '0.8rem',\n        marginTop: 10\n    },\n    small : {\n        margin: 10\n    },\n    progress: {\n        position: 'absoluate'\n\n    }\n    \n\n}\n\n\n\n\nclass signup extends Component {\n    \n    state= {\n        email: \"\",\n        password: \"\",\n        confirmPassword: \"\",\n        handle: '',\n        loading: false,\n        errors: {}\n    }\n\n\n    handleSubmit = (e) => {\n        const {email, password, confirmPassword, handle} =  this.state\n        e.preventDefault()\n        this.props.signup(email, password, confirmPassword, handle)\n        this.props.history.push('/')\n        \n        \n    }\n\n    hangleChange = (e) => {\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n\n\n    render() {\n        const {classes} = this.props \n        const {errors, loading} = this.state\n        return (\n           <Grid container className={classes.form}>\n               <Grid item sm />\n               <Grid item sm>\n                    <img src={AppIcon} alt=\"monkey\" width=\"50%\" height=\"50%\" className={classes.image} />\n                    <Typography variant=\"h4\" className={classes.pageTitle}>Sign Up</Typography>\n                    <form noValidate onSubmit={this.handleSubmit}>\n                        <TextField\n                         id=\"email\"\n                         name=\"email\"\n                          type=\"email\"\n                           label=\"Email\"\n                            className={classes.textField}\n\n                        value={this.state.email}\n                         onChange={this.hangleChange}\n                         helperText={errors.email}\n                         error={errors.email ? true: false}\n                          fullWidth />\n                    \n                    <TextField\n                     id=\"password\"\n                      name=\"password\"\n                       type=\"password\"\n                        label=\"Password\"\n                         className={classes.textField}\n                        value={this.state.password}\n                         onChange={this.hangleChange}\n                         helperText={errors.password}\n                         error={errors.password ? true: false}\n                          fullWidth />\n                    <TextField\n                     id=\"password2\"\n                      name=\"confirmPassword\"\n                       type=\"password\"\n                        label=\"Confirm Password\"\n                         className={classes.textField}\n                        value={this.state.confirmPassword}\n                         onChange={this.hangleChange}\n                         helperText={errors.password}\n                         error={errors.password ? true: false}\n                          fullWidth />\n                    \n                    <TextField\n                     id=\"handle\"\n                      name=\"handle\"\n                       type=\"text\"\n                        label=\"Handle\"\n                         className={classes.textField}\n                        value={this.state.handle}\n                         onChange={this.hangleChange}\n                         helperText={errors.handle}\n                         error={errors.password ? true: false}\n                          fullWidth />\n\n                    {errors.general && (\n                        <Typography variant=\"body2\" className={classes.customError}>\n                            {errors.general}\n                        </Typography>\n                    )}\n                    <Button type=\"submit\" variant=\"contained\" color=\"primary\" disabled={loading}  className={classes.button}>\n                        Sign up\n                        {loading && (\n                            <CircularProgress size={30} className={classes.progress} />\n                        )}\n                        </Button>\n                    <br />\n                    <small className=\"small\" >Have an account ? Login <Link to=\"/login\">Here</Link>  </small>\n                    </form>\n               </Grid>\n               <Grid item sm />\n           </Grid>\n        )\n    }\n}\n\nsignup.propTypes = {\n    classes: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.user.token\n    }\n}\n\nconst mapDispatchToProps  = dispatch => {\n    return {\n        signup: (email, password, confirmPassword, handle) => dispatch(SignUP(email, password, confirmPassword, handle))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(signup))\n","/home/metro/Desktop/projects/soica-media/src/components/Navbar.js",[],"/home/metro/Desktop/projects/soica-media/src/components/Scream.js",["109","110","111"],"/home/metro/Desktop/projects/soica-media/src/utils/authRoute.js",[],"/home/metro/Desktop/projects/soica-media/src/store/reducers/user.js",["112","113"],"import React from 'react'\nimport {updateObj} from './urilits'\nimport * as actionTypes from '../actions/actionTypy'\nimport { unLikeScream } from '../actions/like'\n\n\nconst initualState= {\n    token: null,\n    authenticated: false,\n    error: null, \n    loading: false,\n    data: [],\n    likes: []\n}\n\nconst authStart = (state, action) => {\n    return updateObj(state, {\n        loading: true,\n        error: null,\n        authenticated: true\n    } )\n}\n\nconst authSucess = (state, action) => {\n    return updateObj(state, {\n        token: action.token,\n        authenticated: true,\n        data: action.data,\n    })\n}\n\nconst dataSucess = (state, action) => {\n    return updateObj(state, {\n        data: action.data,\n        error: null,\n        loading: false\n    })\n}\n\nconst like = (state, action) => {\n    return {\n        likes: [\n            ...state.data.likes,\n            {\n                screamId: action.payload.screamId\n            }\n        ]\n    }\n        \n    \n}\n\nconst unlike = (state, action) => {\n    console.log(action)\n    return updateObj(state, {\n        likes: state.data.likes.filter(like => like.screamId !== action.payload.screamId)\n    })\n}\n\n\nconst authFail = (state, action) => {\n    return updateObj(state, {\n        token: action.error\n    })\n}\n\nconst reducer = (state=initualState, action) => {\n    console.log(state)\n    switch(action.type){\n        case actionTypes.AUTH_START: return authStart(state, action)\n        case actionTypes.AUTH_SUCCESS: return authSucess(state, action)\n        case actionTypes.AUTH_FAIL: return authFail(state, action)\n        case actionTypes.DATA_SUCESS: return dataSucess(state, action)\n        case actionTypes.LIKE_SUCESS: return like(state, action)\n        case actionTypes.UNLIKE_SUCESS: return unlike(state, action)\n        default:\n            return state\n    }\n}\n\nexport default reducer","/home/metro/Desktop/projects/soica-media/src/store/reducers/urilits.js",[],"/home/metro/Desktop/projects/soica-media/src/store/actions/actionTypy.js",[],"/home/metro/Desktop/projects/soica-media/src/store/actions/user.js",["114","115"],"import React from 'react'\nimport * as actionType from './actionTypy'\nimport axios from 'axios'\nimport { instance } from './token'\nimport {dataStart, dataFail } from './data'\n\n\n\n\nexport const Auth_start = () => {\n    return {\n        type: actionType.AUTH_START\n    }\n}\n\nexport const Auth_Sucess = (token) => {\n    return {\n        type: actionType.AUTH_SUCCESS,\n        token: token\n    }\n}\n\nconst dataSucess = data => {\n    return {\n        type: actionType.DATA_SUCESS,\n        data: data\n    }\n}\n\nexport const Auth_Fail = (error) => {\n    return {\n        type: actionType.AUTH_FAIL,\n        error: error\n    }\n}\n\nexport const logout= () => {\n    localStorage.removeItem('IdToken')\n    return {\n        type: actionType.AUTH_LOGOUT\n    }\n}\n\nexport const fetchData = () => {\n    return dispatch => {\n        const token = localStorage.getItem(\"IdToken\")\n        dispatch(dataStart())\n        axios.get(\"/user\", {headers: {\n            Authorization: token\n        }})\n        \n        .then(res => {\n            console.log(res.data)\n            dispatch(dataSucess(res.data))\n            \n        })\n        .catch(err => {\n            console.log(err)\n            dispatch(dataFail(err))\n        })\n\n    }\n}\n\n\nexport const authLogin = (email, password) => {\n    return dispatch => {\n        const userData = {\n            email: email,\n            password: password\n        }\n       \n        dispatch(Auth_start)\n        axios.post('/login', userData )\n        .then(res => {\n            const IdToken = res.data.token\n            console.log(res.data.token)\n            localStorage.setItem('IdToken', `Bearer ${res.data.token}`);\n            axios.defaults.headers.common['Authorization'] = IdToken;\n            dispatch(Auth_Sucess(IdToken))\n            dispatch(fetchData())\n            \n        })\n       \n        .catch(err => {\n            dispatch(Auth_Fail(err))\n\n        })\n\n      \n        \n\n    }\n}\n\n\n\n\n\n\n\nexport const SignUP = (email, password, confirmPassword, handle) => {\n    return dispatch => {\n        const userData = {\n            email: email,\n            password: password,\n            confirmPassword: confirmPassword,\n            handle: handle\n        }\n        console.log(userData)\n        dispatch(Auth_start)\n        axios.post('/signup', userData )\n        .then(res => {\n            const IdToken = res.data.token\n            console.log(res.data)\n            localStorage.setItem('IdToken', `Bearer ${res.data.token}`);\n            axios.defaults.headers.common['Authorization'] = IdToken;\n            dispatch(Auth_Sucess(IdToken))\n            this.props.history.push('/')\n        })\n       \n        .catch(err => {\n            dispatch(Auth_Fail(err))\n\n        })\n\n      \n        \n\n    }\n}","/home/metro/Desktop/projects/soica-media/src/store/reducers/data.js",["116"],"/home/metro/Desktop/projects/soica-media/src/store/actions/data.js",["117","118","119"],"import axios from 'axios'\nimport React from 'react'\nimport * as actionTypes from './actionTypy'\nimport { instance } from './token'\n\nexport const dataStart = () => {\n    return {\n        type: actionTypes.DATA_START\n    }\n}\n\nexport const dataSucess = data => {\n    return {\n        type: actionTypes.DATA_SUCESS,\n        data\n    }\n}\n\nexport const dataFail = error => {\n    return {\n        type: actionTypes.DATA_FAIL,\n        error: error\n\n    }\n}\n\n\nexport const fetchData = () => {\n    return dispatch => {\n        const token = localStorage.getItem(\"IdToken\")\n        dispatch(dataStart())\n        instance.get(\"/user\")\n        .then(res => {\n            console.log(res.data)\n            dispatch(dataSucess(res.data))\n            \n        })\n        .catch(err => {\n            console.log(err)\n            dispatch(dataFail(err))\n        })\n\n    }\n}\n\nexport const uploadPic = (formData) => {\n    return dispatch => {\n        dispatch(dataStart())\n        instance.post('/user/image', formData)\n        .then(res => {\n            dispatch(fetchData())\n        })\n        .catch(err => {\n            dispatch(dataFail(err))\n        })\n    }\n}\n\nexport const editDetail = (userDetail) => {\n    return dispatch => {\n        dispatch(dataStart())\n        instance.post('/user',userDetail )\n        .then(() => {\n            dispatch(fetchData())\n        })\n        .catch(err => {\n            dispatch(dataFail(err))\n        })\n    }\n}\n\n","/home/metro/Desktop/projects/soica-media/src/store/actions/token.js",[],"/home/metro/Desktop/projects/soica-media/src/components/profile.js",["120","121","122","123","124","125","126"],"import React, {Component} from 'react'\nimport PropTypes from 'prop-types'\nimport withStyles from '@material-ui/core/styles/withStyles'\nimport {connect} from 'react-redux'\nimport Button from '@material-ui/core/Button'\nimport Typography from '@material-ui/core/Typography'\nimport LocationOn from '@material-ui/icons/LocationOn'\nimport LinkIcon from '@material-ui/icons/Link'\nimport CalendarToday from '@material-ui/icons/CalendarToday';\nimport { Redirect } from 'react-router-dom'\nimport dayjs from 'dayjs'\nimport Paper from '@material-ui/core/Paper'\nimport MuilLink from '@material-ui/core/Link'\nimport {Link} from 'react-router-dom'\nimport {fetchData} from '../store/actions/data'\nimport { useTheme } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport EditIcon from '@material-ui/icons/Edit'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport {uploadPic} from '../store/actions/data'\nimport {logout} from '../store/actions/user'\nimport { Keyboard, KeyboardReturn } from '@material-ui/icons'\nimport EditDetail  from './edit'\n\n\n\nconst styles = (theme) => ({\n  paper: {\n    padding: 20\n  },\n  profile: {\n    '& .image-wrapper': {\n      textAlign: 'center',\n      position: 'relative',\n      '& button': {\n        position: 'absolute',\n        top: '80%',\n        left: '70%'\n      }\n    },\n    '& .profile-image': {\n      width: 200,\n      height: 200,\n      objectFit: 'cover',\n      maxWidth: '100%',\n      borderRadius: '50%'\n    },\n    '& .profile-details': {\n      textAlign: 'center',\n      '& span, svg': {\n        verticalAlign: 'middle'\n      },\n      '& a': {\n        color: theme.palette.primary.main\n      }\n    },\n    '& hr': {\n      border: 'none',\n      margin: '0 0 10px 0'\n    },\n    '& svg.button': {\n      '&:hover': {\n        cursor: 'pointer'\n      }\n    }\n  },\n  buttons: {\n    textAlign: 'center',\n    '& a': {\n      margin: '20px 10px'\n    }\n  }\n})\n  \n\nclass Profile extends Component {\n\n  handleImageChange = (event) => {\n    const image = event.target.files[0]\n    console.log(image)\n    //send to server\n\n    const formData = new FormData();\n    formData.append('image', image, image.name)\n    console.log(formData)\n    this.props.upload(formData)\n\n  }\n\n  handleEditPicture = () => {\n    const fileInput = document.getElementById('imageInput')\n  \n    fileInput.click()\n\n  }\n\n  handleLogout = () => {\n    this.props.logout()\n    this.forceUpdate()\n  }\n\n    componentDidMount() {\n        this.props.fetch()\n    }\n    \n    \n    render() {\n        const {classes} = this.props; \n        const {data, loading, error} = this.props\n       \n\n        let papaer = this.props.data ? (\n          <Paper className={classes.paper}>\n              <div className={classes.profile}>\n                  <div className=\"image-wrapper\">\n                      <img src={data.credentials ? data.credentials.imageUrl: \"\"} className=\"profile-image\" alt=\"profile\" />\n                      <input type=\"file\" id=\"imageInput\" hidden=\"hidden\" onChange={this.handleImageChange}  />\n                      <Tooltip title=\"Edit Profile Picture\" placement=\"top\">\n                      <IconButton onClick={this.handleEditPicture} className=\"button\">\n                        <EditIcon color=\"primary\" />\n                      </IconButton>\n                      </Tooltip>\n                  </div>\n                  <hr />\n                  <div className=\"profile-detail\">\n                      <MuilLink component={Link} to={`/users/${data.credentials && data.credentials.handle}`} color=\"primary\" variant=\"h5\">\n                          @{data.credentials && data.credentials.handle}\n                      </MuilLink>\n                      <h3 />\n                      {data.credentials && data.credentials.bio && <Typography variant=\"body2\">{data && data.credentials.bio}</Typography> }\n                      <hr />\n                      {data.credentials && data.credentials.location && (\n                          <div>\n                          <LocationOn color=\"primary\"  />\n                          <span>{data.credentials && data.credentials.location}</span>\n                          <h1>hey</h1>\n                         \n                          <hr />\n                          </div> \n  \n                      )}\n                      {data.credentials && data.credentials.website && (\n                          <React.Fragment>\n                              <LinkIcon color=\"primary\" />\n                              <a href={data.credentials && data.credentials.website} target=\"_blank\" ref=\"noopener noreferrer\">\n                                  {' '}{data.credentials && data.credentials.website}\n                              </a>\n                              <hr />\n                          </React.Fragment>\n                      )}\n                      <CalendarToday color=\"primary\" /> {' '}\n                      <span>Joined {dayjs(data.credentials && data.credentials.createdAt).format('MMM YYYY')}</span>\n                  </div>\n                  <Tooltip title=\"logout\" placement=\"top\">\n                    <IconButton onClick={this.handleLogout}>\n                      <KeyboardReturn color=\"primary\" />\n                    </IconButton>\n                  </Tooltip>\n                  <EditDetail />\n              </div>\n          </Paper>\n        ): <p>loading</p>\n       \n        let profileMarkup = !this.props.loading ? (\n\n          <React.Fragment>\n\n            {error && (<p>{JSON.stringify(error)}</p>)}\n            {loading && (\n              <p>loading........................</p>\n            )}\n            {data.credentials && (\n              <React.Fragment>\n                {papaer}\n                </React.Fragment>\n\n            )}\n           \n           </React.Fragment> ): (<p>Loading...</p>)\n  \n          return profileMarkup\n        \n        \n    }\n}\n\n\n\nconst mapStateToProps = (state) => {\n    return {\n        data: state.data.data,\n        loading: state.data.loading,\n        error: state.data.error\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        fetch: () => dispatch(fetchData()),\n        upload : (formData) => dispatch(uploadPic(formData)),\n        logout: () => dispatch(logout())\n    }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(withStyles(styles)(Profile))\n\n\n/** \n * <Paper className={classes.paper}>\n              <div className={classes.profile}>\n                  <div className=\"image-wrapper\">\n                      <img src={data && data.credentials.imageUrl} className=\"profile-image\" alt=\"profile\" />\n                      <input type=\"file\" id=\"imageInput\" hidden=\"hidden\" onChange={this.handleImageChange}  />\n                      <Tooltip title=\"Edit Profile Picture\" placement=\"top\">\n                      <IconButton onClick={this.handleEditPicture} className=\"button\">\n                        <EditIcon color=\"primary\" />\n                      </IconButton>\n                      </Tooltip>\n                  </div>\n                  <hr />\n                  <div className=\"profile-detail\">\n                      <MuilLink component={Link} to={`/users/${data && data.credentials.handle}`} color=\"primary\" variant=\"h5\">\n                          @{data && data.credentials.handle}\n                      </MuilLink>\n                      <h3 />\n                      {data && data.credentials.bio && <Typography variant=\"body2\">{data && data.credentials.bio}</Typography> }\n                      <hr />\n                      {data && data.credentials.location && (\n                          <div>\n                          <LocationOn color=\"primary\"  />\n                          <span>{data && data.credentials.location}</span>\n                          <h1>hey</h1>\n                         \n                          <hr />\n                          </div> \n  \n                      )}\n                      {data && data.credentials.website && (\n                          <React.Fragment>\n                              <LinkIcon color=\"primary\" />\n                              <a href={data && data.credentials.website} target=\"_blank\" ref=\"noopener noreferrer\">\n                                  {' '}{data && data.credentials.website}\n                              </a>\n                              <hr />\n                          </React.Fragment>\n                      )}\n                      <CalendarToday color=\"primary\" /> {' '}\n                      <span>Joined {dayjs(data && data.credentials.createdAt).format('MMM YYYY')}</span>\n                  </div>\n                  <Tooltip title=\"logout\" placement=\"top\">\n                    <IconButton onClick={this.handleLogout}>\n                      <KeyboardReturn color=\"primary\" />\n                    </IconButton>\n                  </Tooltip>\n                  <EditDetail />\n              </div>\n          </Paper>\n */","/home/metro/Desktop/projects/soica-media/src/components/edit.js",["127","128"],"import React, {Component} from 'react'\nimport PropTypes from 'prop-types'\nimport withStyles from '@material-ui/core/styles/withStyles'\nimport {connect} from 'react-redux'\nimport {editDetail} from '../store/actions/data'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport IconButton from '@material-ui/core/IconButton';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport EditIcon from '@material-ui/icons/Edit'\nimport TextField from '@material-ui/core/TextField'\n\nconst styles = (theme) => ({\n    ...theme.spreadThis,\n})\n\n\nclass EditDetail extends Component {\n\n\n    state = {\n        bio: \"\",\n        website: \"\",\n        location: \"\",\n        open: false\n    }\n\n       \n    \n    componentDidMount() {\n        const {credentials} = this.props.data\n        this.mapUserDetail(credentials)\n        \n    }\n\n\n    handleSubmit = () => {\n        const{bio, website, location} = this.state\n        const userDetail = {\n            bio: bio,\n            website: website,\n            location: location,\n\n        }\n        this.props.sendData(userDetail)\n        this.handleClose()\n        \n    }\n\n\n    mapUserDetail = (credentials) => {\n        this.setState({\n            bio: credentials.bio ? credentials.bio : '',\n            website: credentials.website ? credentials.website : '',\n            location: credentials.location ? credentials.location : '',\n        })\n    }\n\n    handleOpen = () => {\n        this.setState({open: true})\n        this.mapUserDetail(this.props.data.credentials)\n    }\n    handleClose = () => {\n        this.setState({open: false})\n    }\n\n    handleChange = (e) => {\n        this.setState({[e.target.name]: e.target.value})\n        \n    }\n\n \n    \n\n\n\n    render() {\n        const {classes} = this.props\n        return (\n            <React.Fragment>\n                <Tooltip title=\"Edit detail\" placement=\"top\">\n                <IconButton onClick={this.handleOpen} className={classes.button}>\n                    <EditIcon color=\"primary\" />\n                </IconButton>\n                </Tooltip>\n                <Dialog open={this.state.open} onClose={this.handleClose} fullWidth\n                maxWidth=\"sm\">\n                    <DialogTitle>Edit you details</DialogTitle>\n                    <DialogContent>\n                        <form>\n                            <TextField name=\"bio\"\n                            type=\"text\" \n                            label=\"Bio\"\n                            multiline\n                            row=\"3\"\n                            placeholder=\"A short bio about yourself\"\n                            classes={classes.TextField} value={this.state.bio}\n                            onChange={this.handleChange} fullWidth />\n\n                             <TextField name=\"website\"\n                            type=\"text\" \n                            label=\"website\"\n                            multiline\n                            row=\"3\"\n                            placeholder=\"your website\"\n                            classes={classes.TextField} value={this.state.website}\n                            onChange={this.handleChange} fullWidth />\n\n                            <TextField name=\"location\"\n                            type=\"text\" \n                            label=\"location\"\n                            multiline\n                            row=\"3\"\n                            placeholder=\"your location\"\n                            classes={classes.TextField} value={this.state.location}\n                            onChange={this.handleChange} fullWidth />\n                            \n\n                        </form>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color=\"primary\">\n                            Cancel\n                        </Button>\n                        <Button onClick={this.handleSubmit} color=\"primary\">\n                            Save\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </React.Fragment>\n            \n\n            \n        )\n    }\n}\n\n\n\nconst mapStateToProps = state => {\n    return {\n        data: state.data.data\n\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        sendData: (userData) => dispatch(editDetail(userData))\n\n    }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(withStyles(styles)(EditDetail))\n","/home/metro/Desktop/projects/soica-media/src/store/actions/like.js",["129","130"],"import axios from 'axios'\nimport React from 'react'\nimport * as actionTypes from './actionTypy'\nimport { instance } from './token'\n\n\nconst likeStart = () => {\n    return {\n        type: actionTypes.LIKE_START\n    }\n}\n\n\nconst likeSucess = (payload) => {\n    return {\n        type: actionTypes.LIKE_SUCESS,\n        payload\n    }\n}\n\nconst unlikeSucess = (payload) => {\n    return {\n        type: actionTypes.UNLIKE_SUCESS,\n        payload\n    }\n}\n\n\nconst likeFail = (err) => {\n    return {\n        type: actionTypes.LIKE_FAIL,\n        error: err\n    }\n}\n\nexport const likeScream = (screamId, getState) => {\n    return dispatch => {\n        const token = getState\n        dispatch(likeStart())\n        instance.get(`/scream/${screamId}/like`, { headers: {\"Authorization\" : `Bearer ${token}`} })\n        \n        .then(res => {\n            console.log(res)\n           \n            dispatch(likeSucess(res.data))\n        })\n        .catch(err => {\n            console.log(err)\n            dispatch(likeFail(err))\n        })\n    }\n}\n\nexport const unLikeScream = (screamId) => {\n    return dispatch => {\n        dispatch(likeStart())\n        instance.get(`/scream/${screamId}/unlike`)\n        \n        .then(res => {\n            \n            dispatch(unlikeSucess(res.data))\n        })\n        .catch(err => {\n            console.log(err)\n            dispatch(likeFail(err))\n        })\n    }\n}\n\n","/home/metro/Desktop/projects/soica-media/src/store/actions/sceam.js",[],"/home/metro/Desktop/projects/soica-media/src/components/deleteScream.js",["131","132","133","134","135","136","137","138","139","140","141","142","143","144"],"/home/metro/Desktop/projects/soica-media/src/store/actions/delete.js",["145"],{"ruleId":"146","replacedBy":"147"},{"ruleId":"148","replacedBy":"149"},{"ruleId":"150","severity":1,"message":"151","line":10,"column":8,"nodeType":"152","messageId":"153","endLine":10,"endColumn":13},{"ruleId":"150","severity":1,"message":"154","line":11,"column":8,"nodeType":"152","messageId":"153","endLine":11,"endColumn":20},{"ruleId":"150","severity":1,"message":"155","line":14,"column":9,"nodeType":"152","messageId":"153","endLine":14,"endColumn":16},{"ruleId":"150","severity":1,"message":"156","line":3,"column":8,"nodeType":"152","messageId":"153","endLine":3,"endColumn":13},{"ruleId":"150","severity":1,"message":"156","line":9,"column":8,"nodeType":"152","messageId":"153","endLine":9,"endColumn":13},{"ruleId":"150","severity":1,"message":"156","line":9,"column":8,"nodeType":"152","messageId":"153","endLine":9,"endColumn":13},{"ruleId":"150","severity":1,"message":"157","line":14,"column":8,"nodeType":"152","messageId":"153","endLine":14,"endColumn":16},{"ruleId":"150","severity":1,"message":"158","line":61,"column":33,"nodeType":"152","messageId":"153","endLine":61,"endColumn":45},{"ruleId":"150","severity":1,"message":"159","line":61,"column":68,"nodeType":"152","messageId":"153","endLine":61,"endColumn":76},{"ruleId":"150","severity":1,"message":"160","line":1,"column":8,"nodeType":"152","messageId":"153","endLine":1,"endColumn":13},{"ruleId":"150","severity":1,"message":"161","line":4,"column":10,"nodeType":"152","messageId":"153","endLine":4,"endColumn":22},{"ruleId":"150","severity":1,"message":"160","line":1,"column":8,"nodeType":"152","messageId":"153","endLine":1,"endColumn":13},{"ruleId":"150","severity":1,"message":"162","line":4,"column":10,"nodeType":"152","messageId":"153","endLine":4,"endColumn":18},{"ruleId":"150","severity":1,"message":"160","line":1,"column":8,"nodeType":"152","messageId":"153","endLine":1,"endColumn":13},{"ruleId":"150","severity":1,"message":"156","line":1,"column":8,"nodeType":"152","messageId":"153","endLine":1,"endColumn":13},{"ruleId":"150","severity":1,"message":"160","line":2,"column":8,"nodeType":"152","messageId":"153","endLine":2,"endColumn":13},{"ruleId":"150","severity":1,"message":"163","line":30,"column":15,"nodeType":"152","messageId":"153","endLine":30,"endColumn":20},{"ruleId":"150","severity":1,"message":"164","line":2,"column":8,"nodeType":"152","messageId":"153","endLine":2,"endColumn":17},{"ruleId":"150","severity":1,"message":"165","line":5,"column":8,"nodeType":"152","messageId":"153","endLine":5,"endColumn":14},{"ruleId":"150","severity":1,"message":"166","line":10,"column":10,"nodeType":"152","messageId":"153","endLine":10,"endColumn":18},{"ruleId":"150","severity":1,"message":"167","line":16,"column":10,"nodeType":"152","messageId":"153","endLine":16,"endColumn":18},{"ruleId":"150","severity":1,"message":"168","line":22,"column":10,"nodeType":"152","messageId":"153","endLine":22,"endColumn":18},{"ruleId":"169","severity":1,"message":"170","line":129,"column":23,"nodeType":"171","endLine":129,"endColumn":29},{"ruleId":"172","severity":1,"message":"173","line":145,"column":31,"nodeType":"171","endLine":145,"endColumn":128},{"ruleId":"150","severity":1,"message":"164","line":2,"column":8,"nodeType":"152","messageId":"153","endLine":2,"endColumn":17},{"ruleId":"150","severity":1,"message":"174","line":12,"column":8,"nodeType":"152","messageId":"153","endLine":12,"endColumn":25},{"ruleId":"150","severity":1,"message":"156","line":1,"column":8,"nodeType":"152","messageId":"153","endLine":1,"endColumn":13},{"ruleId":"150","severity":1,"message":"160","line":2,"column":8,"nodeType":"152","messageId":"153","endLine":2,"endColumn":13},{"ruleId":"150","severity":1,"message":"175","line":2,"column":8,"nodeType":"152","messageId":"153","endLine":2,"endColumn":18},{"ruleId":"150","severity":1,"message":"176","line":3,"column":8,"nodeType":"152","messageId":"153","endLine":3,"endColumn":12},{"ruleId":"150","severity":1,"message":"177","line":4,"column":8,"nodeType":"152","messageId":"153","endLine":4,"endColumn":17},{"ruleId":"150","severity":1,"message":"178","line":5,"column":8,"nodeType":"152","messageId":"153","endLine":5,"endColumn":19},{"ruleId":"150","severity":1,"message":"179","line":6,"column":8,"nodeType":"152","messageId":"153","endLine":6,"endColumn":19},{"ruleId":"150","severity":1,"message":"151","line":7,"column":8,"nodeType":"152","messageId":"153","endLine":7,"endColumn":13},{"ruleId":"150","severity":1,"message":"154","line":8,"column":8,"nodeType":"152","messageId":"153","endLine":8,"endColumn":20},{"ruleId":"150","severity":1,"message":"180","line":9,"column":9,"nodeType":"152","messageId":"153","endLine":9,"endColumn":19},{"ruleId":"150","severity":1,"message":"161","line":9,"column":22,"nodeType":"152","messageId":"153","endLine":9,"endColumn":34},{"ruleId":"150","severity":1,"message":"181","line":10,"column":8,"nodeType":"152","messageId":"153","endLine":10,"endColumn":16},{"ruleId":"150","severity":1,"message":"157","line":12,"column":8,"nodeType":"152","messageId":"153","endLine":12,"endColumn":16},{"ruleId":"150","severity":1,"message":"182","line":14,"column":8,"nodeType":"152","messageId":"153","endLine":14,"endColumn":20},{"ruleId":"150","severity":1,"message":"183","line":23,"column":10,"nodeType":"152","messageId":"153","endLine":23,"endColumn":23},{"ruleId":"150","severity":1,"message":"184","line":26,"column":7,"nodeType":"152","messageId":"153","endLine":26,"endColumn":13},{"ruleId":"150","severity":1,"message":"160","line":1,"column":8,"nodeType":"152","messageId":"153","endLine":1,"endColumn":13},"no-native-reassign",["185"],"no-negated-in-lhs",["186"],"no-unused-vars","'dayjs' is defined but never used.","Identifier","unusedVar","'relativeTime' is defined but never used.","'connect' is defined but never used.","'axios' is defined but never used.","'EditIcon' is defined but never used.","'commentCount' is assigned a value but never used.","'screemId' is assigned a value but never used.","'React' is defined but never used.","'unLikeScream' is defined but never used.","'instance' is defined but never used.","'token' is assigned a value but never used.","'PropTypes' is defined but never used.","'Button' is defined but never used.","'Redirect' is defined but never used.","'useTheme' is defined but never used.","'Keyboard' is defined but never used.","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","'DialogContentText' is defined but never used.","'withStyles' is defined but never used.","'Card' is defined but never used.","'CardMedia' is defined but never used.","'CardContent' is defined but never used.","'Typorgraphy' is defined but never used.","'likeScream' is defined but never used.","'ChatIcon' is defined but never used.","'FavoriteIcon' is defined but never used.","'DialogContent' is defined but never used.","'styles' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]