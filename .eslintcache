[{"/home/metro/Desktop/projects/soica-media/src/index.js":"1","/home/metro/Desktop/projects/soica-media/src/App.js":"2","/home/metro/Desktop/projects/soica-media/src/reportWebVitals.js":"3","/home/metro/Desktop/projects/soica-media/src/pages/home.js":"4","/home/metro/Desktop/projects/soica-media/src/pages/login.js":"5","/home/metro/Desktop/projects/soica-media/src/pages/signup.js":"6","/home/metro/Desktop/projects/soica-media/src/components/Navbar.js":"7","/home/metro/Desktop/projects/soica-media/src/components/Scream.js":"8","/home/metro/Desktop/projects/soica-media/src/utils/authRoute.js":"9","/home/metro/Desktop/projects/soica-media/src/store/reducers/user.js":"10","/home/metro/Desktop/projects/soica-media/src/store/reducers/urilits.js":"11","/home/metro/Desktop/projects/soica-media/src/store/actions/actionTypy.js":"12","/home/metro/Desktop/projects/soica-media/src/store/actions/user.js":"13","/home/metro/Desktop/projects/soica-media/src/store/reducers/data.js":"14","/home/metro/Desktop/projects/soica-media/src/store/actions/data.js":"15","/home/metro/Desktop/projects/soica-media/src/store/actions/token.js":"16","/home/metro/Desktop/projects/soica-media/src/components/profile.js":"17","/home/metro/Desktop/projects/soica-media/src/components/edit.js":"18","/home/metro/Desktop/projects/soica-media/src/store/actions/like.js":"19","/home/metro/Desktop/projects/soica-media/src/store/actions/sceam.js":"20","/home/metro/Desktop/projects/soica-media/src/components/deleteScream.js":"21","/home/metro/Desktop/projects/soica-media/src/store/actions/delete.js":"22","/home/metro/Desktop/projects/soica-media/src/components/postScream.js":"23","/home/metro/Desktop/projects/soica-media/src/store/actions/postScream.js":"24","/home/metro/Desktop/projects/soica-media/src/components/screamDialog.js":"25","/home/metro/Desktop/projects/soica-media/src/store/actions/getScream.js":"26"},{"size":994,"mtime":1609946494231,"results":"27","hashOfConfig":"28"},{"size":1781,"mtime":1610226583195,"results":"29","hashOfConfig":"28"},{"size":362,"mtime":1608671118339,"results":"30","hashOfConfig":"28"},{"size":1420,"mtime":1610481078911,"results":"31","hashOfConfig":"28"},{"size":4306,"mtime":1610225454014,"results":"32","hashOfConfig":"28"},{"size":5468,"mtime":1610738950428,"results":"33","hashOfConfig":"28"},{"size":2205,"mtime":1611432410672,"results":"34","hashOfConfig":"28"},{"size":4707,"mtime":1611438537087,"results":"35","hashOfConfig":"28"},{"size":340,"mtime":1609361245460,"results":"36","hashOfConfig":"28"},{"size":1843,"mtime":1611173504289,"results":"37","hashOfConfig":"28"},{"size":132,"mtime":1610726024712,"results":"38","hashOfConfig":"28"},{"size":996,"mtime":1611436286877,"results":"39","hashOfConfig":"28"},{"size":2729,"mtime":1610919409889,"results":"40","hashOfConfig":"28"},{"size":3156,"mtime":1611436978690,"results":"41","hashOfConfig":"28"},{"size":1437,"mtime":1610826387730,"results":"42","hashOfConfig":"28"},{"size":226,"mtime":1611172740243,"results":"43","hashOfConfig":"28"},{"size":8855,"mtime":1610916681828,"results":"44","hashOfConfig":"28"},{"size":4712,"mtime":1610223501160,"results":"45","hashOfConfig":"28"},{"size":1283,"mtime":1611173545608,"results":"46","hashOfConfig":"28"},{"size":718,"mtime":1610481043731,"results":"47","hashOfConfig":"28"},{"size":2792,"mtime":1611006924665,"results":"48","hashOfConfig":"28"},{"size":533,"mtime":1611002848044,"results":"49","hashOfConfig":"28"},{"size":3783,"mtime":1611433865193,"results":"50","hashOfConfig":"28"},{"size":697,"mtime":1611434788159,"results":"51","hashOfConfig":"28"},{"size":4292,"mtime":1611523180052,"results":"52","hashOfConfig":"28"},{"size":767,"mtime":1611436342065,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"1lvtz3k",{"filePath":"57","messages":"58","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"56"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"56"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"56"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"56"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"56"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"56"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"56"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"56"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"56"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"56"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"56"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"56"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"56"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"56"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"56"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"56"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"/home/metro/Desktop/projects/soica-media/src/index.js",[],["123","124"],"/home/metro/Desktop/projects/soica-media/src/App.js",["125","126","127"],"import React from 'react'\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom'\nimport Home from './pages/home'\nimport login from './pages/login'\nimport Signup from './pages/signup'\nimport ButtonAppBar from './components/Navbar'\nimport './App.css'\nimport MuiThemeProvider from '@material-ui/core/styles/MuiThemeProvider'\nimport createMuiTheme from '@material-ui/core/styles/createMuiTheme'\nimport dayjs from 'dayjs'\nimport relativeTime from 'dayjs/plugin/relativeTime'\nimport jwtDecode from 'jwt-decode'\nimport AuthRoute from './utils/authRoute'\nimport {connect} from 'react-redux'\n\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      light: '#33c9dc',\n      main: '#00bcd4',\n      dark: '#008394',\n      contrastText: '#fff'\n    },\n    secondary: {\n      light: '#ff6333',\n      main: '#ff3d00',\n      dark: '#b22a00',\n      contrastText: '#fff'\n    }\n  },\n\n  typography: {\n    useNextVariants: true\n  }\n\n})\n\nlet authenticated;\n\nconst token = localStorage.IdToken\nif(token) {\n  const decodedToken = jwtDecode(token);\n  console.log(decodedToken)\n  if(decodedToken * 1000 < Date.now()) {\n    window.location.href = '/login'\n    authenticated = false\n  }else {\n    authenticated = true\n  }\n\n}\n\n\nfunction App() {\n  return (\n    <MuiThemeProvider theme={theme}>\n      <div className=\"App\">\n     <Router>\n     <ButtonAppBar />\n       <div className=\"container\">\n         \n       <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <AuthRoute exact  path=\"/signup\" component={Signup} authenticated={authenticated} />\n       <AuthRoute exact  path=\"/login\" component={login} authenticated={authenticated} />\n       \n       </Switch>\n       </div>\n      \n      \n     </Router>\n    </div>\n    </MuiThemeProvider>\n  );\n}\n\n\n\nexport default App;\n","/home/metro/Desktop/projects/soica-media/src/reportWebVitals.js",[],"/home/metro/Desktop/projects/soica-media/src/pages/home.js",["128"],"import { Grid } from '@material-ui/core'\nimport React, {Component} from 'react'\nimport axios from 'axios'\nimport Scream from '../components/Scream'\nimport {fetchData} from '../store/actions/data'\nimport {connect} from 'react-redux'\nimport Profile from '../components/profile'\nimport {fetchSCream} from '../store/actions/sceam'\n\n\n\nclass Home extends Component {\n\n    state = {\n        screams: []\n    }\n\n    componentDidMount(){\n        \n        this.props.scream()\n        this.props.fetch()\n\n\n    }\n\n    render() {\n        console.log(this.props.data)\n      \n        let recentScreamsMarkup = this.props.screams ? (\n            this.props.screams.map(post => <Scream key={post.screemId} scream={post} />)\n        ): <p>Loading...</p>\n        console.log(this.props.screams)\n        return (\n           <Grid container spacing={16} >\n               <Grid item sm={8} xs={12}>\n                   {recentScreamsMarkup}\n               </Grid>\n\n               <Grid item sm={4} xs={12}>\n                    <Profile />\n               </Grid>\n           </Grid>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        data: state.data.data,\n        screams: state.data.screams\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        fetch: () => dispatch(fetchData()),\n        scream: () => dispatch(fetchSCream())\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home)","/home/metro/Desktop/projects/soica-media/src/pages/login.js",["129"],"import React, {Component} from 'react'\nimport withStyles from '@material-ui/core/styles/withStyles'\nimport PropTypes from 'prop-types'\nimport Grid from '@material-ui/core/Grid'\nimport AppIcon from '../images/cafe.jpg'\nimport {Typography} from '@material-ui/core'\nimport TextField from '@material-ui/core/TextField'\nimport Button from '@material-ui/core/Button'\nimport axios from 'axios'\nimport Link from 'react-router-dom/Link'\nimport {CircularProgress} from '@material-ui/core'\nimport {connect} from 'react-redux'\nimport {authLogin} from '../store/actions/user'\n\nconst styles =  {\n    form : {\n        textAlign: 'center'\n    },\n    image: {\n        margin: '20px auto 20px auto'\n    },\n    pageTitle: {\n        margin: '10px auto 10px auto'\n    },\n    textField: {\n        margin: '10px auto 10px auto'\n    },\n    button: {\n        marginTop: 20,\n        position: 'relative'\n\n    },\n    customError:{\n        color: 'red',\n        fontSize: '0.8rem',\n        marginTop: 10\n    },\n    small : {\n        margin: 10\n    },\n    progress: {\n        position: 'absoluate'\n\n    }\n    \n\n}\n\n\n\n\nclass login extends Component {\n    \n    state= {\n        email: \"\",\n        password: \"\",\n        loading: false,\n        errors: {}\n    }\n\n\n\n    handleSubmit = (e) => {\n        const {email, password} =  this.state\n        e.preventDefault()\n        this.props.login(email, password)\n        this.props.history.push('/')\n        \n        \n    }\n\n    hangleChange = (e) => {\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n\n\n    render() {\n        const {classes} = this.props \n        const {errors, loading} = this.state\n        return (\n           <Grid container className={classes.form}>\n               <Grid item sm />\n               <Grid item sm>\n                    <img src={AppIcon} alt=\"monkey\" width=\"50%\" height=\"50%\" className={classes.image} />\n                    <Typography variant=\"h4\" className={classes.pageTitle}>Login</Typography>\n                    <form noValidate onSubmit={this.handleSubmit}>\n                        <TextField\n                         id=\"email\"\n                         name=\"email\"\n                          type=\"email\"\n                           label=\"Email\"\n                            className={classes.textField}\n\n                        value={this.state.email}\n                         onChange={this.hangleChange}\n                         helperText={errors.email}\n                         error={errors.email ? true: false}\n                          fullWidth />\n                    \n                    <TextField\n                     id=\"password\"\n                      name=\"password\"\n                       type=\"password\"\n                        label=\"Password\"\n                         className={classes.textField}\n                        value={this.state.password}\n                         onChange={this.hangleChange}\n                         helperText={errors.password}\n                         error={errors.password ? true: false}\n                          fullWidth />\n\n                    {errors.general && (\n                        <Typography variant=\"body2\" className={classes.customError}>\n                            {errors.general}\n                        </Typography>\n                    )}\n                    <Button type=\"submit\" variant=\"contained\" color=\"primary\" disabled={loading}  className={classes.button}>\n                        Login \n                        {loading && (\n                            <CircularProgress size={30} className={classes.progress} />\n                        )}\n                        </Button>\n                    <br />\n                    <small className=\"small\" >Don't have an account ? don't worry Sign Up <Link to=\"/signup\">Here</Link>  </small>\n                    </form>\n               </Grid>\n               <Grid item sm />\n           </Grid>\n        )\n    }\n}\n\nlogin.propTypes = {\n    classes: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.user.token\n    }\n}\n\nconst mapDispatchToProps  = dispatch => {\n    return {\n        login: (email, password) => dispatch(authLogin(email, password))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(login))\n\n","/home/metro/Desktop/projects/soica-media/src/pages/signup.js",["130"],"import React, {Component} from 'react'\nimport withStyles from '@material-ui/core/styles/withStyles'\nimport PropTypes from 'prop-types'\nimport Grid from '@material-ui/core/Grid'\nimport AppIcon from '../images/cafe.jpg'\nimport {Typography} from '@material-ui/core'\nimport TextField from '@material-ui/core/TextField'\nimport Button from '@material-ui/core/Button'\nimport axios from 'axios'\nimport Link from 'react-router-dom/Link'\nimport {CircularProgress} from '@material-ui/core'\nimport {SignUP} from '../store/actions/user'\nimport {connect} from 'react-redux'\n\n\n\nconst styles =  {\n    form : {\n        textAlign: 'center'\n    },\n    image: {\n        margin: '20px auto 20px auto'\n    },\n    pageTitle: {\n        margin: '10px auto 10px auto'\n    },\n    textField: {\n        margin: '10px auto 10px auto'\n    },\n    button: {\n        marginTop: 20,\n        position: 'relative'\n\n    },\n    customError:{\n        color: 'red',\n        fontSize: '0.8rem',\n        marginTop: 10\n    },\n    small : {\n        margin: 10\n    },\n    progress: {\n        position: 'absoluate'\n\n    }\n    \n\n}\n\n\n\n\nclass signup extends Component {\n    \n    state= {\n        email: \"\",\n        password: \"\",\n        confirmPassword: \"\",\n        handle: '',\n        loading: false,\n        errors: {}\n    }\n\n\n    handleSubmit = (e) => {\n        const {email, password, confirmPassword, handle} =  this.state\n        e.preventDefault()\n        this.props.signup(email, password, confirmPassword, handle)\n        this.props.history.push('/')\n        \n        \n    }\n\n    hangleChange = (e) => {\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n\n\n    render() {\n        const {classes} = this.props \n        const {errors, loading} = this.state\n        return (\n           <Grid container className={classes.form}>\n               <Grid item sm />\n               <Grid item sm>\n                    <img src={AppIcon} alt=\"monkey\" width=\"50%\" height=\"50%\" className={classes.image} />\n                    <Typography variant=\"h4\" className={classes.pageTitle}>Sign Up</Typography>\n                    <form noValidate onSubmit={this.handleSubmit}>\n                        <TextField\n                         id=\"email\"\n                         name=\"email\"\n                          type=\"email\"\n                           label=\"Email\"\n                            className={classes.textField}\n\n                        value={this.state.email}\n                         onChange={this.hangleChange}\n                         helperText={errors.email}\n                         error={errors.email ? true: false}\n                          fullWidth />\n                    \n                    <TextField\n                     id=\"password\"\n                      name=\"password\"\n                       type=\"password\"\n                        label=\"Password\"\n                         className={classes.textField}\n                        value={this.state.password}\n                         onChange={this.hangleChange}\n                         helperText={errors.password}\n                         error={errors.password ? true: false}\n                          fullWidth />\n                    <TextField\n                     id=\"password2\"\n                      name=\"confirmPassword\"\n                       type=\"password\"\n                        label=\"Confirm Password\"\n                         className={classes.textField}\n                        value={this.state.confirmPassword}\n                         onChange={this.hangleChange}\n                         helperText={errors.password}\n                         error={errors.password ? true: false}\n                          fullWidth />\n                    \n                    <TextField\n                     id=\"handle\"\n                      name=\"handle\"\n                       type=\"text\"\n                        label=\"Handle\"\n                         className={classes.textField}\n                        value={this.state.handle}\n                         onChange={this.hangleChange}\n                         helperText={errors.handle}\n                         error={errors.password ? true: false}\n                          fullWidth />\n\n                    {errors.general && (\n                        <Typography variant=\"body2\" className={classes.customError}>\n                            {errors.general}\n                        </Typography>\n                    )}\n                    <Button type=\"submit\" variant=\"contained\" color=\"primary\" disabled={loading}  className={classes.button}>\n                        Sign up\n                        {loading && (\n                            <CircularProgress size={30} className={classes.progress} />\n                        )}\n                        </Button>\n                    <br />\n                    <small className=\"small\" >Have an account ? Login <Link to=\"/login\">Here</Link>  </small>\n                    </form>\n               </Grid>\n               <Grid item sm />\n           </Grid>\n        )\n    }\n}\n\nsignup.propTypes = {\n    classes: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.user.token\n    }\n}\n\nconst mapDispatchToProps  = dispatch => {\n    return {\n        signup: (email, password, confirmPassword, handle) => dispatch(SignUP(email, password, confirmPassword, handle))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(signup))\n","/home/metro/Desktop/projects/soica-media/src/components/Navbar.js",["131"],"import React, {Component} from 'react'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Button from '@material-ui/core/Button';\nimport Link from 'react-router-dom/Link'\nimport {connect} from 'react-redux'\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip'\nimport AddIcon from '@material-ui/icons/Add'\nimport HomeIcon from '@material-ui/icons/Home'\nimport Notifications from '@material-ui/icons/Notifications'\nimport PostScream from './postScream'\n\n\nclass Navbar extends Component {\n    render() {\n        const {authen} = this.props\n        return (\n            <AppBar>\n                <Toolbar className=\"nav-container\" >\n                    {authen ? (\n                        <React.Fragment>\n                            <PostScream />\n                          \n\n                            <Link to=\"/\">\n                            <Tooltip title=\"Home\">\n                                <IconButton>\n                                    <HomeIcon color=\"primary\" />\n                                </IconButton>\n                                \n                            </Tooltip>\n                            </Link>\n\n                            <Tooltip title=\"Notifcation\">\n                                <IconButton>\n                                    <Notifications color=\"primary\" />\n                                </IconButton>\n\n                            </Tooltip>\n\n                        </React.Fragment>\n                    ): (\n                        <React.Fragment>\n                            <Button color=\"inherit\" component={Link} to=\"/login\" >Login</Button>\n                    <Button component={Link} to=\"/\"  color=\"inherit\">Home</Button>\n                    <Button component={Link} to=\"/signup\" color=\"inherit\">Sign Up</Button>\n                        </React.Fragment>\n                    ) }\n                    \n                </Toolbar>\n            </AppBar>\n            \n                \n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n      authen: state.user.authenticated\n  \n    }\n  }\n\nexport default connect(mapStateToProps)(Navbar);","/home/metro/Desktop/projects/soica-media/src/components/Scream.js",["132"],"import React, {Component} from 'react'\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Card from '@material-ui/core/Card';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typorgraphy from '@material-ui/core/Typography'\nimport {Link} from 'react-router-dom'\nimport dayjs from 'dayjs'\nimport relativeTime from 'dayjs/plugin/relativeTime'\nimport {connect } from 'react-redux'\nimport {likeScream , unLikeScream} from '../store/actions/like'\nimport ChatIcon from '@material-ui/icons/Chat'\nimport IconButton from '@material-ui/core/IconButton';\nimport EditIcon from '@material-ui/icons/Edit'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport FavoriteIcon from '@material-ui/icons/Favorite'\nimport FavoriteBorder from '@material-ui/icons/FavoriteBorder'\nimport DeleteScream from './deleteScream'\nimport ScreamDialog from './screamDialog'\n\n\nconst styles = {\n    card: {\n        display: 'flex',\n        marginBotttom: 20,\n        position: 'relative'\n\n    },\n    image: {\n        minWidth: 200,\n    },\n    content:{\n        padding: 25,\n        objectFit: 'cover'\n\n    }\n\n\n}\n\nclass Scream extends Component {\n\n\n    likedScream = () => {\n        if(this.props.likes && this.props.likes.find(like => like.screamId ===this.props.scream.screemId))\n        return true\n        else return false\n    }\n    likeScream = () => {\n        this.props.like(this.props.scream.screemId)\n    }\n\n    unlikeScream = () => {\n        this.props.unlike(this.props.scream.screemId)\n    }\n\n    \n    \n    render() {\n        dayjs.extend(relativeTime)\n        const {classes} = this.props\n        const {userImage, body, commentCount, createAt, likeCount, screemId, userHandle} = this.props.scream\n        console.log(this.props.scream)\n\n        const likeButton = !this.props.authen ? (\n            <Tooltip title=\"like\">\n            <IconButton >\n                <Link to=\"/login\">\n                    <FavoriteBorder color=\"primary\" />\n                </Link>\n              \n            </IconButton>\n          </Tooltip>\n        \n            ): (\n                this.likedScream() ? (\n                    <Tooltip title=\"Undo like\" onClick={this.unlikeScream} >\n                    <IconButton >\n                        \n                        <FavoriteIcon color=\"primary\" />\n                        \n                      \n                    </IconButton>\n                  </Tooltip>\n                ): (\n                    <Tooltip title=\"like\" onClick={this.likeScream} >\n                    <IconButton >\n                        \n                        <FavoriteBorder color=\"primary\" />\n                        \n                      \n                    </IconButton>\n                  </Tooltip>\n                )\n            );\n\n           const deleteButton =  //this.props.authen && userHandle  === this.props.cred ? (\n                <DeleteScream screamId={this.props.scream.screemId} />\n\n           // ): null\n\n\n        return (\n            <Card className={classes.card} >\n                <CardMedia image={userImage} title=\"Profile image\" className={classes.image} />\n                <CardContent className={classes.content} >\n                    <Typorgraphy variant=\"h5\" component={Link} to={`/users/${userHandle}`} color=\"primay\"  >\n                        {userHandle }\n                        </Typorgraphy>\n                        {deleteButton}\n                    <Typorgraphy variant=\"body2\" color=\"textSecondary\">\n                        {dayjs(createAt).fromNow()}\n                        </Typorgraphy>\n                    <Typorgraphy variant=\"body1\">\n                        {body}\n                        </Typorgraphy>\n                    {likeButton}\n                    <span>{likeCount} likes </span>\n                    <Tooltip title=\"comment\" placement=\"top\">\n                    <IconButton >\n                      <ChatIcon color = \"primary\" />\n                    </IconButton>\n                  </Tooltip> <span>{commentCount} comments</span>\n                  <ScreamDialog screamId={screemId} userHandle={userHandle}  />\n                </CardContent>\n            </Card>\n\n        )\n\n    }\n}\n\nconst mapStateToProps = (state) =>{\n    return {\n        likes: state.data.data.likes,\n        authen: state.user.authenticated,\n        state: state.user.token,\n       // cred : state.data.data.credentials.handle\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        like: (screamId) => dispatch(likeScream(screamId)),\n        unlike : (screamId) => dispatch(unLikeScream(screamId))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(Scream))","/home/metro/Desktop/projects/soica-media/src/utils/authRoute.js",[],"/home/metro/Desktop/projects/soica-media/src/store/reducers/user.js",["133","134"],"import React from 'react'\nimport {updateObj} from './urilits'\nimport * as actionTypes from '../actions/actionTypy'\nimport { unLikeScream } from '../actions/like'\n\n\nconst initualState= {\n    token: null,\n    authenticated: true,\n    error: null, \n    loading: false,\n    data: [],\n    likes: []\n}\n\nconst authStart = (state, action) => {\n    return updateObj(state, {\n        loading: true,\n        error: null,\n        authenticated: true\n    } )\n}\n\nconst authSucess = (state, action) => {\n    return updateObj(state, {\n        token: action.token,\n        authenticated: true,\n        data: action.data,\n    })\n}\n\nconst dataSucess = (state, action) => {\n    return updateObj(state, {\n        data: action.data,\n        error: null,\n        loading: false\n    })\n}\n\nconst like = (state, action) => {\n    return {\n        likes: [\n            ...state,\n            {\n                screamId: action.payload.screamId\n            }\n        ]\n    }\n        \n    \n}\n\nconst unlike = (state, action) => {\n    console.log(action)\n    return updateObj(state, {\n        likes: state.data.likes.filter(like => like.screamId !== action.payload.screamId)\n    })\n}\n\n\nconst authFail = (state, action) => {\n    return updateObj(state, {\n        token: action.error\n    })\n}\n\nconst reducer = (state=initualState, action) => {\n    console.log(state)\n    switch(action.type){\n        case actionTypes.AUTH_START: return authStart(state, action)\n        case actionTypes.AUTH_SUCCESS: return authSucess(state, action)\n        case actionTypes.AUTH_FAIL: return authFail(state, action)\n        case actionTypes.DATA_SUCESS: return dataSucess(state, action)\n        case actionTypes.LIKE_SUCESS: return like(state, action)\n        case actionTypes.UNLIKE_SUCESS: return unlike(state, action)\n        default:\n            return state\n    }\n}\n\nexport default reducer","/home/metro/Desktop/projects/soica-media/src/store/reducers/urilits.js",[],"/home/metro/Desktop/projects/soica-media/src/store/actions/actionTypy.js",[],"/home/metro/Desktop/projects/soica-media/src/store/actions/user.js",["135","136"],"import React from 'react'\nimport * as actionType from './actionTypy'\nimport axios from 'axios'\nimport { instance } from './token'\nimport {dataStart, dataFail } from './data'\n\n\n\n\nexport const Auth_start = () => {\n    return {\n        type: actionType.AUTH_START\n    }\n}\n\nexport const Auth_Sucess = (token) => {\n    return {\n        type: actionType.AUTH_SUCCESS,\n        token: token\n    }\n}\n\nconst dataSucess = data => {\n    return {\n        type: actionType.DATA_SUCESS,\n        data: data\n    }\n}\n\nexport const Auth_Fail = (error) => {\n    return {\n        type: actionType.AUTH_FAIL,\n        error: error\n    }\n}\n\nexport const logout= () => {\n    localStorage.removeItem('IdToken')\n    return {\n        type: actionType.AUTH_LOGOUT\n    }\n}\n\nexport const fetchData = () => {\n    return dispatch => {\n        const token = localStorage.getItem(\"IdToken\")\n        dispatch(dataStart())\n        axios.get(\"/user\", {headers: {\n            Authorization: token\n        }})\n        \n        .then(res => {\n            console.log(res.data)\n            dispatch(dataSucess(res.data))\n            \n        })\n        .catch(err => {\n            console.log(err)\n            dispatch(dataFail(err))\n        })\n\n    }\n}\n\n\nexport const authLogin = (email, password) => {\n    return dispatch => {\n        const userData = {\n            email: email,\n            password: password\n        }\n       \n        dispatch(Auth_start)\n        axios.post('/login', userData )\n        .then(res => {\n            const IdToken = res.data.token\n            console.log(res.data.token)\n            localStorage.setItem('IdToken', `Bearer ${res.data.token}`);\n            axios.defaults.headers.common['Authorization'] = IdToken;\n            dispatch(Auth_Sucess(IdToken))\n            dispatch(fetchData())\n            \n        })\n       \n        .catch(err => {\n            dispatch(Auth_Fail(err))\n\n        })\n\n      \n        \n\n    }\n}\n\n\n\n\n\n\n\nexport const SignUP = (email, password, confirmPassword, handle) => {\n    return dispatch => {\n        const userData = {\n            email: email,\n            password: password,\n            confirmPassword: confirmPassword,\n            handle: handle\n        }\n        console.log(userData)\n        dispatch(Auth_start)\n        axios.post('/signup', userData )\n        .then(res => {\n            const IdToken = res.data.token\n            console.log(res.data)\n            localStorage.setItem('IdToken', `Bearer ${res.data.token}`);\n            axios.defaults.headers.common['Authorization'] = IdToken;\n            dispatch(Auth_Sucess(IdToken))\n            this.props.history.push('/')\n        })\n       \n        .catch(err => {\n            dispatch(Auth_Fail(err))\n\n        })\n\n      \n        \n\n    }\n}","/home/metro/Desktop/projects/soica-media/src/store/reducers/data.js",["137"],"import React from 'react'\nimport {updateObj} from './urilits'\nimport * as actionType from '../actions/actionTypy'\n\n\nconst initalstate = {\n    data : [],\n    error: null,\n    loading: false,\n    screams: [],\n    scream: {}\n\n}\n\n\nconst  dataStart = (state, action) => {\n    console.log(state)\n    return updateObj(state, {\n        error: null,\n        loading: true\n    })\n}\n\nconst dataSucess = (state, action) => {\n    return updateObj(state, {\n        data: action.data,\n        error: null,\n        loading: false\n    })\n}\n\n\n\nconst dataFail = (state, action) => {\n    return updateObj(state, {\n        loading: false,\n        error: action.error\n    })\n}\n\nconst  screamStart = (state, action) => {\n    return updateObj(state, {\n        error: null,\n        loading: true\n    })\n}\n\nconst screamSucess = (state, action) => {\n    return updateObj(state, {\n        screams: action.payload,\n        error: null,\n        loading: false\n    })\n}\n\n\n\nconst screamFail = (state, action) => {\n    return updateObj(state, {\n        loading: false,\n        error: action.error\n    })\n}\n\n\nconst  onescreamStart = (state, action) => {\n    return updateObj(state, {\n        error: null,\n        loading: true\n    })\n}\n\nconst onescreamSucess = (state, action) => {\n    return updateObj(state, {\n        scream: action.payload,\n        error: null,\n        loading: false\n    })\n}\n\n\n\nconst onescreamFail = (state, action) => {\n    return updateObj(state, {\n        loading: false,\n        error: action.error\n    })\n}\n\n\nconst deleteScream = (state, action) => {\n    const index = state.screams.findIndex(scream => scream.screamId === action.payload)\n    state.screams.splice(index, 1);\n    return {\n        ...state\n    }\n}\n\nconst postScream = (state, action) => {\n    return updateObj(state, {\n        screams: [action.post, ...state.screams]\n    })\n\n}\n\n\nconst reducer = (state =initalstate, action ) => {\n    switch(action.type) {\n        case actionType.DATA_START: return dataStart(state, action)\n        case actionType.DATA_SUCESS: return dataSucess(state, action)\n        case actionType.DATA_FAIL: return dataFail(state, action)\n        case actionType.SCREAM_START: return screamStart(state, action)\n        case actionType.SCREAM_SUCESS: return screamSucess(state, action)\n        case actionType.SCREAM_FAIL: return screamFail(state, action)\n        case actionType.ONESCREAM_START: return onescreamStart(state, action)\n        case actionType.ONESCREAM_SUCESS: return onescreamSucess(state, action)\n        case actionType.ONESCREAM_FAIL: return onescreamFail(state, action)\n        case actionType.DELETE_SUCESS: return deleteScream(state, action)\n        case actionType.POST_SUCESS: return postScream(state, action)\n        case actionType.UNLIKE_SUCESS:\n        case actionType.LIKE_SUCESS:\n            //net to get the screamid from scream which is not in redux yet\n            let index = state.screams.findIndex( (scream) => scream.screamId === action.payload.screamId)\n            state.screams[index] = action.payload\n            return {\n                ...state\n            }\n        default:\n            return state\n\n    }\n}\n\nexport default reducer ","/home/metro/Desktop/projects/soica-media/src/store/actions/data.js",["138","139","140"],"import axios from 'axios'\nimport React from 'react'\nimport * as actionTypes from './actionTypy'\nimport { instance } from './token'\n\nexport const dataStart = () => {\n    return {\n        type: actionTypes.DATA_START\n    }\n}\n\nexport const dataSucess = data => {\n    return {\n        type: actionTypes.DATA_SUCESS,\n        data\n    }\n}\n\nexport const dataFail = error => {\n    return {\n        type: actionTypes.DATA_FAIL,\n        error: error\n\n    }\n}\n\n\nexport const fetchData = () => {\n    return dispatch => {\n        const token = localStorage.getItem(\"IdToken\")\n        dispatch(dataStart())\n        instance.get(\"/user\")\n        .then(res => {\n            console.log(res.data)\n            dispatch(dataSucess(res.data))\n            \n        })\n        .catch(err => {\n            console.log(err)\n            dispatch(dataFail(err))\n        })\n\n    }\n}\n\nexport const uploadPic = (formData) => {\n    return dispatch => {\n        dispatch(dataStart())\n        instance.post('/user/image', formData)\n        .then(res => {\n            dispatch(fetchData())\n        })\n        .catch(err => {\n            dispatch(dataFail(err))\n        })\n    }\n}\n\nexport const editDetail = (userDetail) => {\n    return dispatch => {\n        dispatch(dataStart())\n        instance.post('/user',userDetail )\n        .then(() => {\n            dispatch(fetchData())\n        })\n        .catch(err => {\n            dispatch(dataFail(err))\n        })\n    }\n}\n\n","/home/metro/Desktop/projects/soica-media/src/store/actions/token.js",[],"/home/metro/Desktop/projects/soica-media/src/components/profile.js",["141","142","143","144","145","146","147"],"import React, {Component} from 'react'\nimport PropTypes from 'prop-types'\nimport withStyles from '@material-ui/core/styles/withStyles'\nimport {connect} from 'react-redux'\nimport Button from '@material-ui/core/Button'\nimport Typography from '@material-ui/core/Typography'\nimport LocationOn from '@material-ui/icons/LocationOn'\nimport LinkIcon from '@material-ui/icons/Link'\nimport CalendarToday from '@material-ui/icons/CalendarToday';\nimport { Redirect } from 'react-router-dom'\nimport dayjs from 'dayjs'\nimport Paper from '@material-ui/core/Paper'\nimport MuilLink from '@material-ui/core/Link'\nimport {Link} from 'react-router-dom'\nimport {fetchData} from '../store/actions/data'\nimport { useTheme } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport EditIcon from '@material-ui/icons/Edit'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport {uploadPic} from '../store/actions/data'\nimport {logout} from '../store/actions/user'\nimport { Keyboard, KeyboardReturn } from '@material-ui/icons'\nimport EditDetail  from './edit'\n\n\n\nconst styles = (theme) => ({\n  paper: {\n    padding: 20\n  },\n  profile: {\n    '& .image-wrapper': {\n      textAlign: 'center',\n      position: 'relative',\n      '& button': {\n        position: 'absolute',\n        top: '80%',\n        left: '70%'\n      }\n    },\n    '& .profile-image': {\n      width: 200,\n      height: 200,\n      objectFit: 'cover',\n      maxWidth: '100%',\n      borderRadius: '50%'\n    },\n    '& .profile-details': {\n      textAlign: 'center',\n      '& span, svg': {\n        verticalAlign: 'middle'\n      },\n      '& a': {\n        color: theme.palette.primary.main\n      }\n    },\n    '& hr': {\n      border: 'none',\n      margin: '0 0 10px 0'\n    },\n    '& svg.button': {\n      '&:hover': {\n        cursor: 'pointer'\n      }\n    }\n  },\n  buttons: {\n    textAlign: 'center',\n    '& a': {\n      margin: '20px 10px'\n    }\n  }\n})\n  \n\nclass Profile extends Component {\n\n  handleImageChange = (event) => {\n    const image = event.target.files[0]\n    console.log(image)\n    //send to server\n\n    const formData = new FormData();\n    formData.append('image', image, image.name)\n    console.log(formData)\n    this.props.upload(formData)\n\n  }\n\n  handleEditPicture = () => {\n    const fileInput = document.getElementById('imageInput')\n  \n    fileInput.click()\n\n  }\n\n  handleLogout = () => {\n    this.props.logout()\n    this.forceUpdate()\n  }\n\n    componentDidMount() {\n        this.props.fetch()\n    }\n    \n    \n    render() {\n        const {classes} = this.props; \n        const {data, loading, error} = this.props\n       \n\n        let papaer = this.props.data ? (\n          <Paper className={classes.paper}>\n              <div className={classes.profile}>\n                  <div className=\"image-wrapper\">\n                      <img src={data.credentials ? data.credentials.imageUrl: \"\"} className=\"profile-image\" alt=\"profile\" />\n                      <input type=\"file\" id=\"imageInput\" hidden=\"hidden\" onChange={this.handleImageChange}  />\n                      <Tooltip title=\"Edit Profile Picture\" placement=\"top\">\n                      <IconButton onClick={this.handleEditPicture} className=\"button\">\n                        <EditIcon color=\"primary\" />\n                      </IconButton>\n                      </Tooltip>\n                  </div>\n                  <hr />\n                  <div className=\"profile-detail\">\n                      <MuilLink component={Link} to={`/users/${data.credentials && data.credentials.handle}`} color=\"primary\" variant=\"h5\">\n                          @{data.credentials && data.credentials.handle}\n                      </MuilLink>\n                      <h3 />\n                      {data.credentials && data.credentials.bio && <Typography variant=\"body2\">{data && data.credentials.bio}</Typography> }\n                      <hr />\n                      {data.credentials && data.credentials.location && (\n                          <div>\n                          <LocationOn color=\"primary\"  />\n                          <span>{data.credentials && data.credentials.location}</span>\n                          <h1>hey</h1>\n                         \n                          <hr />\n                          </div> \n  \n                      )}\n                      {data.credentials && data.credentials.website && (\n                          <React.Fragment>\n                              <LinkIcon color=\"primary\" />\n                              <a href={data.credentials && data.credentials.website} target=\"_blank\" ref=\"noopener noreferrer\">\n                                  {' '}{data.credentials && data.credentials.website}\n                              </a>\n                              <hr />\n                          </React.Fragment>\n                      )}\n                      <CalendarToday color=\"primary\" /> {' '}\n                      <span>Joined {dayjs(data.credentials && data.credentials.createdAt).format('MMM YYYY')}</span>\n                  </div>\n                  <Tooltip title=\"logout\" placement=\"top\">\n                    <IconButton onClick={this.handleLogout}>\n                      <KeyboardReturn color=\"primary\" />\n                    </IconButton>\n                  </Tooltip>\n                  <EditDetail />\n              </div>\n          </Paper>\n        ): <p>loading</p>\n       \n        let profileMarkup = !this.props.loading ? (\n\n          <React.Fragment>\n\n            {error && (<p>{JSON.stringify(error)}</p>)}\n            {loading && (\n              <p>loading........................</p>\n            )}\n            {data.credentials && (\n              <React.Fragment>\n                {papaer}\n                </React.Fragment>\n\n            )}\n           \n           </React.Fragment> ): (<p>Loading...</p>)\n  \n          return profileMarkup\n        \n        \n    }\n}\n\n\n\nconst mapStateToProps = (state) => {\n    return {\n        data: state.data.data,\n        loading: state.data.loading,\n        error: state.data.error\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        fetch: () => dispatch(fetchData()),\n        upload : (formData) => dispatch(uploadPic(formData)),\n        logout: () => dispatch(logout())\n    }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(withStyles(styles)(Profile))\n\n\n/** \n * <Paper className={classes.paper}>\n              <div className={classes.profile}>\n                  <div className=\"image-wrapper\">\n                      <img src={data && data.credentials.imageUrl} className=\"profile-image\" alt=\"profile\" />\n                      <input type=\"file\" id=\"imageInput\" hidden=\"hidden\" onChange={this.handleImageChange}  />\n                      <Tooltip title=\"Edit Profile Picture\" placement=\"top\">\n                      <IconButton onClick={this.handleEditPicture} className=\"button\">\n                        <EditIcon color=\"primary\" />\n                      </IconButton>\n                      </Tooltip>\n                  </div>\n                  <hr />\n                  <div className=\"profile-detail\">\n                      <MuilLink component={Link} to={`/users/${data && data.credentials.handle}`} color=\"primary\" variant=\"h5\">\n                          @{data && data.credentials.handle}\n                      </MuilLink>\n                      <h3 />\n                      {data && data.credentials.bio && <Typography variant=\"body2\">{data && data.credentials.bio}</Typography> }\n                      <hr />\n                      {data && data.credentials.location && (\n                          <div>\n                          <LocationOn color=\"primary\"  />\n                          <span>{data && data.credentials.location}</span>\n                          <h1>hey</h1>\n                         \n                          <hr />\n                          </div> \n  \n                      )}\n                      {data && data.credentials.website && (\n                          <React.Fragment>\n                              <LinkIcon color=\"primary\" />\n                              <a href={data && data.credentials.website} target=\"_blank\" ref=\"noopener noreferrer\">\n                                  {' '}{data && data.credentials.website}\n                              </a>\n                              <hr />\n                          </React.Fragment>\n                      )}\n                      <CalendarToday color=\"primary\" /> {' '}\n                      <span>Joined {dayjs(data && data.credentials.createdAt).format('MMM YYYY')}</span>\n                  </div>\n                  <Tooltip title=\"logout\" placement=\"top\">\n                    <IconButton onClick={this.handleLogout}>\n                      <KeyboardReturn color=\"primary\" />\n                    </IconButton>\n                  </Tooltip>\n                  <EditDetail />\n              </div>\n          </Paper>\n */","/home/metro/Desktop/projects/soica-media/src/components/edit.js",["148","149"],"import React, {Component} from 'react'\nimport PropTypes from 'prop-types'\nimport withStyles from '@material-ui/core/styles/withStyles'\nimport {connect} from 'react-redux'\nimport {editDetail} from '../store/actions/data'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport IconButton from '@material-ui/core/IconButton';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport EditIcon from '@material-ui/icons/Edit'\nimport TextField from '@material-ui/core/TextField'\n\nconst styles = (theme) => ({\n    ...theme.spreadThis,\n})\n\n\nclass EditDetail extends Component {\n\n\n    state = {\n        bio: \"\",\n        website: \"\",\n        location: \"\",\n        open: false\n    }\n\n       \n    \n    componentDidMount() {\n        const {credentials} = this.props.data\n        this.mapUserDetail(credentials)\n        \n    }\n\n\n    handleSubmit = () => {\n        const{bio, website, location} = this.state\n        const userDetail = {\n            bio: bio,\n            website: website,\n            location: location,\n\n        }\n        this.props.sendData(userDetail)\n        this.handleClose()\n        \n    }\n\n\n    mapUserDetail = (credentials) => {\n        this.setState({\n            bio: credentials.bio ? credentials.bio : '',\n            website: credentials.website ? credentials.website : '',\n            location: credentials.location ? credentials.location : '',\n        })\n    }\n\n    handleOpen = () => {\n        this.setState({open: true})\n        this.mapUserDetail(this.props.data.credentials)\n    }\n    handleClose = () => {\n        this.setState({open: false})\n    }\n\n    handleChange = (e) => {\n        this.setState({[e.target.name]: e.target.value})\n        \n    }\n\n \n    \n\n\n\n    render() {\n        const {classes} = this.props\n        return (\n            <React.Fragment>\n                <Tooltip title=\"Edit detail\" placement=\"top\">\n                <IconButton onClick={this.handleOpen} className={classes.button}>\n                    <EditIcon color=\"primary\" />\n                </IconButton>\n                </Tooltip>\n                <Dialog open={this.state.open} onClose={this.handleClose} fullWidth\n                maxWidth=\"sm\">\n                    <DialogTitle>Edit you details</DialogTitle>\n                    <DialogContent>\n                        <form>\n                            <TextField name=\"bio\"\n                            type=\"text\" \n                            label=\"Bio\"\n                            multiline\n                            row=\"3\"\n                            placeholder=\"A short bio about yourself\"\n                            classes={classes.TextField} value={this.state.bio}\n                            onChange={this.handleChange} fullWidth />\n\n                             <TextField name=\"website\"\n                            type=\"text\" \n                            label=\"website\"\n                            multiline\n                            row=\"3\"\n                            placeholder=\"your website\"\n                            classes={classes.TextField} value={this.state.website}\n                            onChange={this.handleChange} fullWidth />\n\n                            <TextField name=\"location\"\n                            type=\"text\" \n                            label=\"location\"\n                            multiline\n                            row=\"3\"\n                            placeholder=\"your location\"\n                            classes={classes.TextField} value={this.state.location}\n                            onChange={this.handleChange} fullWidth />\n                            \n\n                        </form>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color=\"primary\">\n                            Cancel\n                        </Button>\n                        <Button onClick={this.handleSubmit} color=\"primary\">\n                            Save\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </React.Fragment>\n            \n\n            \n        )\n    }\n}\n\n\n\nconst mapStateToProps = state => {\n    return {\n        data: state.data.data\n\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        sendData: (userData) => dispatch(editDetail(userData))\n\n    }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(withStyles(styles)(EditDetail))\n","/home/metro/Desktop/projects/soica-media/src/store/actions/like.js",["150","151"],"import axios from 'axios'\nimport React from 'react'\nimport * as actionTypes from './actionTypy'\nimport { instance } from './token'\n\n\nconst likeStart = () => {\n    return {\n        type: actionTypes.LIKE_START\n    }\n}\n\n\nconst likeSucess = (payload) => {\n    return {\n        type: actionTypes.LIKE_SUCESS,\n        payload\n    }\n}\n\nconst unlikeSucess = (payload) => {\n    return {\n        type: actionTypes.UNLIKE_SUCESS,\n        payload\n    }\n}\n\n\nconst likeFail = (err) => {\n    return {\n        type: actionTypes.LIKE_FAIL,\n        error: err\n    }\n}\n\nexport const likeScream = (screamId) => {\n    return dispatch => {\n       \n        dispatch(likeStart())\n        instance.get(`/scream/${screamId}/like`)\n        \n        .then(res => {\n         \n           \n            dispatch(likeSucess(res.data))\n        })\n        .catch(err => {\n            console.log(err)\n            dispatch(likeFail(err))\n        })\n    }\n}\n\nexport const unLikeScream = (screamId) => {\n    return dispatch => {\n        dispatch(likeStart())\n        instance.get(`/scream/${screamId}/unlike`)\n        \n        .then(res => {\n            \n            dispatch(unlikeSucess(res.data))\n        })\n        .catch(err => {\n            console.log(err)\n            dispatch(likeFail(err))\n        })\n    }\n}\n\n","/home/metro/Desktop/projects/soica-media/src/store/actions/sceam.js",[],"/home/metro/Desktop/projects/soica-media/src/components/deleteScream.js",["152","153","154","155","156","157","158","159","160","161","162","163","164","165"],"import React, {Component} from 'react'\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Card from '@material-ui/core/Card';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typorgraphy from '@material-ui/core/Typography'\nimport dayjs from 'dayjs'\nimport relativeTime from 'dayjs/plugin/relativeTime'\nimport {likeScream , unLikeScream} from '../store/actions/like'\nimport ChatIcon from '@material-ui/icons/Chat'\nimport IconButton from '@material-ui/core/IconButton';\nimport EditIcon from '@material-ui/icons/Edit'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport FavoriteIcon from '@material-ui/icons/Favorite'\n\nimport Button from '@material-ui/core/Button'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DeleteOutline from '@material-ui/icons/DeleteOutline'\nimport {deleteSCream} from '../store/actions/delete'\nimport {connect} from 'react-redux'\nimport { DialogContent } from '@material-ui/core';\n\n\nconst styles = {\n    deleteButton: {\n        position: 'absolute',\n        left: '80%'\n    }\n}\n\n\nclass DeleteScream extends Component {\n\n    state = {\n        open: false\n    }\n\n    handleOpen =() => {\n        this.setState({open: true})\n    }\n\n    handleClose = () => {\n        this.setState({open:false})\n    }\n\n    deleteSCream = () => {\n        this.props.delete(this.props.screamId)\n        this.setState({open: false})\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <Tooltip title=\"Delete Scream\" placement=\"right\">\n                    <IconButton className=\"deleteButton\" onClick={this.handleOpen}>\n                      <DeleteOutline color=\"secondary\" />\n                    </IconButton>\n                  </Tooltip>\n                  <Dialog open={this.state.open} onClose={this.handleClose} fullWidth\n                  maxWidth=\"sm\">\n                      <DialogTitle>\n                          Are you sure you want to delete this scream ?\n                      </DialogTitle>\n                      <DialogActions>\n                          <Button onClick={this.handleClose} color=\"primary\">\n                              Cancel\n                          </Button>\n                          <Button onClick={this.deleteSCream} color=\"secondary\">\n                              Delete\n                          </Button>\n                      </DialogActions>\n                  </Dialog>\n            </React.Fragment>\n        )\n    }\n}\n\nconst mapDispatchToProps =(dispatch) => {\n    return {\n        delete: (screamId) => dispatch(deleteSCream(screamId))\n    }\n}\n\nexport default connect(null, mapDispatchToProps)(DeleteScream)","/home/metro/Desktop/projects/soica-media/src/store/actions/delete.js",["166"],"import React from 'react'\nimport * as actionType from './actionTypy'\nimport { instance } from './token'\n\n\n\n\n\nconst deleteSucess = (payload) => {\n    return {\n        type: actionType.DATA_SUCESS,\n        payload:payload\n\n    }\n}\n\n\n\n\n\nexport const deleteSCream = (screamId) => {\n    return dispatch => {\n        \n        instance.delete(`/scream/${screamId}`)\n        .then(res => {\n            dispatch(deleteSucess(res.data))\n        })\n        .catch(err => {\n            console.log(err)\n            \n        })\n        \n    }\n}\n\n","/home/metro/Desktop/projects/soica-media/src/components/postScream.js",["167","168","169","170"],"import React, {Component} from 'react'\nimport PropTypes from 'prop-types'\nimport withStyles from '@material-ui/core/styles/withStyles'\nimport {connect} from 'react-redux'\nimport {postSceam} from '../store/actions/postScream'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport IconButton from '@material-ui/core/IconButton';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport EditIcon from '@material-ui/icons/Edit'\nimport TextField from '@material-ui/core/TextField'\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport AddIcon from '@material-ui/icons/Add'\nimport CloseIcon from '@material-ui/icons/Close'\n\n\n\nconst styles = theme => ({\n    ...theme.spreadThis,\n    submitButton:{\n        position: 'relative'\n    },\n    progressSpinner:{\n        position: 'absolute'\n    },\n    closeButton: {\n        position: 'absolute',\n        left: '90%',\n        top: '10%'\n    }\n\n\n\n})\n\nclass PostScream extends Component {\n\n\n    state= {\n        open: false,\n        body: '',\n        errors: {}\n    }\n\n    handleOpen = () => {\n        this.setState({open: true})\n    }\n\n    handleClose = () => {\n        this.setState({open: false})\n    }\n\n    handleChange = (e) => {\n        this.setState({[e.target.name]: e.target.value})\n    }\n    handleSubmit = (e) => {\n        e.preventDefault()\n        console.log(\"body is\" + this.state.body)\n        this.props.post({body: this.state.body})\n    }\n\n    render(){\n        const {classes} = this.props\n        return(\n            <React.Fragment>\n                  <Tooltip title=\"Post a scream \" onClick={this.handleOpen} >\n                    <IconButton >\n                        <AddIcon color=\"primary\" />\n                    </IconButton>\n                  </Tooltip>\n\n                <Dialog open={this.state.open} onClose={this.handleClose} fullWidth maxWidth=\"sm\">\n                <Tooltip title=\"close\" onClick={this.handleClose} tipClassName={classes.closeButton} >\n                    <IconButton >\n                        <CloseIcon  />\n                    </IconButton>\n                  </Tooltip>\n\n                <DialogTitle>\n                    Post a new Scream\n                </DialogTitle>\n                <DialogContent>\n                    <form onSubmit={this.handleSubmit}>\n                        <TextField\n                        name=\"body\"\n                        type=\"text\"\n                        label=\"SCREAM\"\n                        multiline\n                        rows=\"3\"\n                        placeholder=\"Scream\"\n                        className=\"classes.textField\"\n                        onChange={this.handleChange}\n                        fullWidth />\n\n                        <Button type=\"submit\" variant=\"contained\" color=\"primary\"\n                        className={classes.submitButton}>\n                            Submit\n                           {this.props.loading && (<CircularProgress size={30} className={classes.progressSpinner} />)}\n\n\n                        </Button>\n\n                    </form>\n                </DialogContent>\n\n                </Dialog>\n                  \n            </React.Fragment>\n        )\n    }\n\n}\n\nconst mapStateToProps = state => {\n    return {\n        data: state.data.screams,\n        loading: state.data.loading\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        post: (scream) =>  dispatch(postSceam(scream))\n    }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(withStyles(styles)(PostScream))\n","/home/metro/Desktop/projects/soica-media/src/store/actions/postScream.js",[],"/home/metro/Desktop/projects/soica-media/src/components/screamDialog.js",["171","172","173","174","175","176"],"/home/metro/Desktop/projects/soica-media/src/store/actions/getScream.js",[],{"ruleId":"177","replacedBy":"178"},{"ruleId":"179","replacedBy":"180"},{"ruleId":"181","severity":1,"message":"182","line":10,"column":8,"nodeType":"183","messageId":"184","endLine":10,"endColumn":13},{"ruleId":"181","severity":1,"message":"185","line":11,"column":8,"nodeType":"183","messageId":"184","endLine":11,"endColumn":20},{"ruleId":"181","severity":1,"message":"186","line":14,"column":9,"nodeType":"183","messageId":"184","endLine":14,"endColumn":16},{"ruleId":"181","severity":1,"message":"187","line":3,"column":8,"nodeType":"183","messageId":"184","endLine":3,"endColumn":13},{"ruleId":"181","severity":1,"message":"187","line":9,"column":8,"nodeType":"183","messageId":"184","endLine":9,"endColumn":13},{"ruleId":"181","severity":1,"message":"187","line":9,"column":8,"nodeType":"183","messageId":"184","endLine":9,"endColumn":13},{"ruleId":"181","severity":1,"message":"188","line":9,"column":8,"nodeType":"183","messageId":"184","endLine":9,"endColumn":15},{"ruleId":"181","severity":1,"message":"189","line":14,"column":8,"nodeType":"183","messageId":"184","endLine":14,"endColumn":16},{"ruleId":"181","severity":1,"message":"190","line":1,"column":8,"nodeType":"183","messageId":"184","endLine":1,"endColumn":13},{"ruleId":"181","severity":1,"message":"191","line":4,"column":10,"nodeType":"183","messageId":"184","endLine":4,"endColumn":22},{"ruleId":"181","severity":1,"message":"190","line":1,"column":8,"nodeType":"183","messageId":"184","endLine":1,"endColumn":13},{"ruleId":"181","severity":1,"message":"192","line":4,"column":10,"nodeType":"183","messageId":"184","endLine":4,"endColumn":18},{"ruleId":"181","severity":1,"message":"190","line":1,"column":8,"nodeType":"183","messageId":"184","endLine":1,"endColumn":13},{"ruleId":"181","severity":1,"message":"187","line":1,"column":8,"nodeType":"183","messageId":"184","endLine":1,"endColumn":13},{"ruleId":"181","severity":1,"message":"190","line":2,"column":8,"nodeType":"183","messageId":"184","endLine":2,"endColumn":13},{"ruleId":"181","severity":1,"message":"193","line":30,"column":15,"nodeType":"183","messageId":"184","endLine":30,"endColumn":20},{"ruleId":"181","severity":1,"message":"194","line":2,"column":8,"nodeType":"183","messageId":"184","endLine":2,"endColumn":17},{"ruleId":"181","severity":1,"message":"195","line":5,"column":8,"nodeType":"183","messageId":"184","endLine":5,"endColumn":14},{"ruleId":"181","severity":1,"message":"196","line":10,"column":10,"nodeType":"183","messageId":"184","endLine":10,"endColumn":18},{"ruleId":"181","severity":1,"message":"197","line":16,"column":10,"nodeType":"183","messageId":"184","endLine":16,"endColumn":18},{"ruleId":"181","severity":1,"message":"198","line":22,"column":10,"nodeType":"183","messageId":"184","endLine":22,"endColumn":18},{"ruleId":"199","severity":1,"message":"200","line":129,"column":23,"nodeType":"201","endLine":129,"endColumn":29},{"ruleId":"202","severity":1,"message":"203","line":145,"column":31,"nodeType":"201","endLine":145,"endColumn":128},{"ruleId":"181","severity":1,"message":"194","line":2,"column":8,"nodeType":"183","messageId":"184","endLine":2,"endColumn":17},{"ruleId":"181","severity":1,"message":"204","line":12,"column":8,"nodeType":"183","messageId":"184","endLine":12,"endColumn":25},{"ruleId":"181","severity":1,"message":"187","line":1,"column":8,"nodeType":"183","messageId":"184","endLine":1,"endColumn":13},{"ruleId":"181","severity":1,"message":"190","line":2,"column":8,"nodeType":"183","messageId":"184","endLine":2,"endColumn":13},{"ruleId":"181","severity":1,"message":"205","line":2,"column":8,"nodeType":"183","messageId":"184","endLine":2,"endColumn":18},{"ruleId":"181","severity":1,"message":"206","line":3,"column":8,"nodeType":"183","messageId":"184","endLine":3,"endColumn":12},{"ruleId":"181","severity":1,"message":"207","line":4,"column":8,"nodeType":"183","messageId":"184","endLine":4,"endColumn":17},{"ruleId":"181","severity":1,"message":"208","line":5,"column":8,"nodeType":"183","messageId":"184","endLine":5,"endColumn":19},{"ruleId":"181","severity":1,"message":"209","line":6,"column":8,"nodeType":"183","messageId":"184","endLine":6,"endColumn":19},{"ruleId":"181","severity":1,"message":"182","line":7,"column":8,"nodeType":"183","messageId":"184","endLine":7,"endColumn":13},{"ruleId":"181","severity":1,"message":"185","line":8,"column":8,"nodeType":"183","messageId":"184","endLine":8,"endColumn":20},{"ruleId":"181","severity":1,"message":"210","line":9,"column":9,"nodeType":"183","messageId":"184","endLine":9,"endColumn":19},{"ruleId":"181","severity":1,"message":"191","line":9,"column":22,"nodeType":"183","messageId":"184","endLine":9,"endColumn":34},{"ruleId":"181","severity":1,"message":"211","line":10,"column":8,"nodeType":"183","messageId":"184","endLine":10,"endColumn":16},{"ruleId":"181","severity":1,"message":"189","line":12,"column":8,"nodeType":"183","messageId":"184","endLine":12,"endColumn":16},{"ruleId":"181","severity":1,"message":"212","line":14,"column":8,"nodeType":"183","messageId":"184","endLine":14,"endColumn":20},{"ruleId":"181","severity":1,"message":"213","line":23,"column":10,"nodeType":"183","messageId":"184","endLine":23,"endColumn":23},{"ruleId":"181","severity":1,"message":"214","line":26,"column":7,"nodeType":"183","messageId":"184","endLine":26,"endColumn":13},{"ruleId":"181","severity":1,"message":"190","line":1,"column":8,"nodeType":"183","messageId":"184","endLine":1,"endColumn":13},{"ruleId":"181","severity":1,"message":"194","line":2,"column":8,"nodeType":"183","messageId":"184","endLine":2,"endColumn":17},{"ruleId":"181","severity":1,"message":"215","line":10,"column":8,"nodeType":"183","messageId":"184","endLine":10,"endColumn":21},{"ruleId":"181","severity":1,"message":"204","line":12,"column":8,"nodeType":"183","messageId":"184","endLine":12,"endColumn":25},{"ruleId":"181","severity":1,"message":"189","line":14,"column":8,"nodeType":"183","messageId":"184","endLine":14,"endColumn":16},{"ruleId":"181","severity":1,"message":"194","line":2,"column":8,"nodeType":"183","messageId":"184","endLine":2,"endColumn":17},{"ruleId":"181","severity":1,"message":"216","line":5,"column":9,"nodeType":"183","messageId":"184","endLine":5,"endColumn":18},{"ruleId":"181","severity":1,"message":"195","line":8,"column":8,"nodeType":"183","messageId":"184","endLine":8,"endColumn":14},{"ruleId":"181","severity":1,"message":"215","line":10,"column":8,"nodeType":"183","messageId":"184","endLine":10,"endColumn":21},{"ruleId":"181","severity":1,"message":"204","line":12,"column":8,"nodeType":"183","messageId":"184","endLine":12,"endColumn":25},{"ruleId":"181","severity":1,"message":"217","line":13,"column":8,"nodeType":"183","messageId":"184","endLine":13,"endColumn":19},"no-native-reassign",["218"],"no-negated-in-lhs",["219"],"no-unused-vars","'dayjs' is defined but never used.","Identifier","unusedVar","'relativeTime' is defined but never used.","'connect' is defined but never used.","'axios' is defined but never used.","'AddIcon' is defined but never used.","'EditIcon' is defined but never used.","'React' is defined but never used.","'unLikeScream' is defined but never used.","'instance' is defined but never used.","'token' is assigned a value but never used.","'PropTypes' is defined but never used.","'Button' is defined but never used.","'Redirect' is defined but never used.","'useTheme' is defined but never used.","'Keyboard' is defined but never used.","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","'DialogContentText' is defined but never used.","'withStyles' is defined but never used.","'Card' is defined but never used.","'CardMedia' is defined but never used.","'CardContent' is defined but never used.","'Typorgraphy' is defined but never used.","'likeScream' is defined but never used.","'ChatIcon' is defined but never used.","'FavoriteIcon' is defined but never used.","'DialogContent' is defined but never used.","'styles' is assigned a value but never used.","'DialogActions' is defined but never used.","'postSceam' is defined but never used.","'DialogTitle' is defined but never used.","no-global-assign","no-unsafe-negation"]