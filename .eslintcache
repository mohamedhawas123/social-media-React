[{"/home/metro/Desktop/projects/soica-media/src/index.js":"1","/home/metro/Desktop/projects/soica-media/src/App.js":"2","/home/metro/Desktop/projects/soica-media/src/reportWebVitals.js":"3","/home/metro/Desktop/projects/soica-media/src/pages/home.js":"4","/home/metro/Desktop/projects/soica-media/src/pages/login.js":"5","/home/metro/Desktop/projects/soica-media/src/pages/signup.js":"6","/home/metro/Desktop/projects/soica-media/src/components/Navbar.js":"7","/home/metro/Desktop/projects/soica-media/src/components/Scream.js":"8","/home/metro/Desktop/projects/soica-media/src/utils/authRoute.js":"9","/home/metro/Desktop/projects/soica-media/src/store/reducers/user.js":"10","/home/metro/Desktop/projects/soica-media/src/store/reducers/urilits.js":"11","/home/metro/Desktop/projects/soica-media/src/store/actions/actionTypy.js":"12","/home/metro/Desktop/projects/soica-media/src/store/actions/user.js":"13","/home/metro/Desktop/projects/soica-media/src/store/reducers/data.js":"14","/home/metro/Desktop/projects/soica-media/src/store/actions/data.js":"15","/home/metro/Desktop/projects/soica-media/src/store/actions/token.js":"16","/home/metro/Desktop/projects/soica-media/src/components/profile.js":"17"},{"size":994,"mtime":1609946494231,"results":"18","hashOfConfig":"19"},{"size":1744,"mtime":1609362770828,"results":"20","hashOfConfig":"19"},{"size":362,"mtime":1608671118339,"results":"21","hashOfConfig":"19"},{"size":1398,"mtime":1609966793937,"results":"22","hashOfConfig":"19"},{"size":4269,"mtime":1609874752383,"results":"23","hashOfConfig":"19"},{"size":5431,"mtime":1609876546778,"results":"24","hashOfConfig":"19"},{"size":744,"mtime":1609008652881,"results":"25","hashOfConfig":"19"},{"size":1550,"mtime":1609104474605,"results":"26","hashOfConfig":"19"},{"size":340,"mtime":1609361245460,"results":"27","hashOfConfig":"19"},{"size":890,"mtime":1609860849914,"results":"28","hashOfConfig":"19"},{"size":105,"mtime":1609860693978,"results":"29","hashOfConfig":"19"},{"size":296,"mtime":1609945481883,"results":"30","hashOfConfig":"19"},{"size":1942,"mtime":1609876579456,"results":"31","hashOfConfig":"19"},{"size":954,"mtime":1609946445399,"results":"32","hashOfConfig":"19"},{"size":814,"mtime":1609947231987,"results":"33","hashOfConfig":"19"},{"size":161,"mtime":1609947305963,"results":"34","hashOfConfig":"19"},{"size":3922,"mtime":1609969154188,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"1lvtz3k",{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"38"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"38"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"38"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"38"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"38"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"38"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"38"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"38"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/metro/Desktop/projects/soica-media/src/index.js",[],["79","80"],"/home/metro/Desktop/projects/soica-media/src/App.js",["81","82"],"import React from 'react'\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom'\nimport Home from './pages/home'\nimport login from './pages/login'\nimport Signup from './pages/signup'\nimport ButtonAppBar from './components/Navbar'\nimport './App.css'\nimport MuiThemeProvider from '@material-ui/core/styles/MuiThemeProvider'\nimport createMuiTheme from '@material-ui/core/styles/createMuiTheme'\nimport dayjs from 'dayjs'\nimport relativeTime from 'dayjs/plugin/relativeTime'\nimport jwtDecode from 'jwt-decode'\nimport AuthRoute from './utils/authRoute'\n\n\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      light: '#33c9dc',\n      main: '#00bcd4',\n      dark: '#008394',\n      contrastText: '#fff'\n    },\n    secondary: {\n      light: '#ff6333',\n      main: '#ff3d00',\n      dark: '#b22a00',\n      contrastText: '#fff'\n    }\n  },\n\n  typography: {\n    useNextVariants: true\n  }\n\n})\n\nlet authenticated;\n\nconst token = localStorage.IdToken\nif(token) {\n  const decodedToken = jwtDecode(token);\n  console.log(decodedToken)\n  if(decodedToken * 1000 < Date.now()) {\n    window.location.href = '/login'\n    authenticated = false\n  }else {\n    authenticated = true\n  }\n\n}\n\n\nfunction App() {\n  return (\n    <MuiThemeProvider theme={theme}>\n      <div className=\"App\">\n     <Router>\n     <ButtonAppBar />\n       <div className=\"container\">\n         \n       <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <AuthRoute exact  path=\"/signup\" component={Signup} authenticated={authenticated} />\n       <AuthRoute exact  path=\"/login\" component={login} authenticated={authenticated} />\n       \n       </Switch>\n       </div>\n      \n      \n     </Router>\n    </div>\n    </MuiThemeProvider>\n  );\n}\n\nexport default App;\n","/home/metro/Desktop/projects/soica-media/src/reportWebVitals.js",[],"/home/metro/Desktop/projects/soica-media/src/pages/home.js",[],"/home/metro/Desktop/projects/soica-media/src/pages/login.js",["83"],"import React, {Component} from 'react'\nimport withStyles from '@material-ui/core/styles/withStyles'\nimport PropTypes from 'prop-types'\nimport Grid from '@material-ui/core/Grid'\nimport AppIcon from '../images/cafe.jpg'\nimport {Typography} from '@material-ui/core'\nimport TextField from '@material-ui/core/TextField'\nimport Button from '@material-ui/core/Button'\nimport axios from 'axios'\nimport Link from 'react-router-dom/Link'\nimport {CircularProgress} from '@material-ui/core'\nimport {connect} from 'react-redux'\nimport {authLogin} from '../store/actions/user'\n\nconst styles =  {\n    form : {\n        textAlign: 'center'\n    },\n    image: {\n        margin: '20px auto 20px auto'\n    },\n    pageTitle: {\n        margin: '10px auto 10px auto'\n    },\n    textField: {\n        margin: '10px auto 10px auto'\n    },\n    button: {\n        marginTop: 20,\n        position: 'relative'\n\n    },\n    customError:{\n        color: 'red',\n        fontSize: '0.8rem',\n        marginTop: 10\n    },\n    small : {\n        margin: 10\n    },\n    progress: {\n        position: 'absoluate'\n\n    }\n    \n\n}\n\n\n\n\nclass login extends Component {\n    \n    state= {\n        email: \"\",\n        password: \"\",\n        loading: false,\n        errors: {}\n    }\n\n\n\n    handleSubmit = (e) => {\n        const {email, password} =  this.state\n        e.preventDefault()\n        this.props.login(email, password)\n        \n        \n    }\n\n    hangleChange = (e) => {\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n\n\n    render() {\n        const {classes} = this.props \n        const {errors, loading} = this.state\n        return (\n           <Grid container className={classes.form}>\n               <Grid item sm />\n               <Grid item sm>\n                    <img src={AppIcon} alt=\"monkey\" width=\"50%\" height=\"50%\" className={classes.image} />\n                    <Typography variant=\"h4\" className={classes.pageTitle}>Login</Typography>\n                    <form noValidate onSubmit={this.handleSubmit}>\n                        <TextField\n                         id=\"email\"\n                         name=\"email\"\n                          type=\"email\"\n                           label=\"Email\"\n                            className={classes.textField}\n\n                        value={this.state.email}\n                         onChange={this.hangleChange}\n                         helperText={errors.email}\n                         error={errors.email ? true: false}\n                          fullWidth />\n                    \n                    <TextField\n                     id=\"password\"\n                      name=\"password\"\n                       type=\"password\"\n                        label=\"Password\"\n                         className={classes.textField}\n                        value={this.state.password}\n                         onChange={this.hangleChange}\n                         helperText={errors.password}\n                         error={errors.password ? true: false}\n                          fullWidth />\n\n                    {errors.general && (\n                        <Typography variant=\"body2\" className={classes.customError}>\n                            {errors.general}\n                        </Typography>\n                    )}\n                    <Button type=\"submit\" variant=\"contained\" color=\"primary\" disabled={loading}  className={classes.button}>\n                        Login \n                        {loading && (\n                            <CircularProgress size={30} className={classes.progress} />\n                        )}\n                        </Button>\n                    <br />\n                    <small className=\"small\" >Don't have an account ? don't worry Sign Up <Link to=\"/signup\">Here</Link>  </small>\n                    </form>\n               </Grid>\n               <Grid item sm />\n           </Grid>\n        )\n    }\n}\n\nlogin.propTypes = {\n    classes: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.user.token\n    }\n}\n\nconst mapDispatchToProps  = dispatch => {\n    return {\n        login: (email, password) => dispatch(authLogin(email, password))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(login))\n\n","/home/metro/Desktop/projects/soica-media/src/pages/signup.js",["84"],"import React, {Component} from 'react'\nimport withStyles from '@material-ui/core/styles/withStyles'\nimport PropTypes from 'prop-types'\nimport Grid from '@material-ui/core/Grid'\nimport AppIcon from '../images/cafe.jpg'\nimport {Typography} from '@material-ui/core'\nimport TextField from '@material-ui/core/TextField'\nimport Button from '@material-ui/core/Button'\nimport axios from 'axios'\nimport Link from 'react-router-dom/Link'\nimport {CircularProgress} from '@material-ui/core'\nimport {SignUP} from '../store/actions/user'\nimport {connect} from 'react-redux'\n\n\n\nconst styles =  {\n    form : {\n        textAlign: 'center'\n    },\n    image: {\n        margin: '20px auto 20px auto'\n    },\n    pageTitle: {\n        margin: '10px auto 10px auto'\n    },\n    textField: {\n        margin: '10px auto 10px auto'\n    },\n    button: {\n        marginTop: 20,\n        position: 'relative'\n\n    },\n    customError:{\n        color: 'red',\n        fontSize: '0.8rem',\n        marginTop: 10\n    },\n    small : {\n        margin: 10\n    },\n    progress: {\n        position: 'absoluate'\n\n    }\n    \n\n}\n\n\n\n\nclass signup extends Component {\n    \n    state= {\n        email: \"\",\n        password: \"\",\n        confirmPassword: \"\",\n        handle: '',\n        loading: false,\n        errors: {}\n    }\n\n\n    handleSubmit = (e) => {\n        const {email, password, confirmPassword, handle} =  this.state\n        e.preventDefault()\n        this.props.signup(email, password, confirmPassword, handle)\n        \n        \n    }\n\n    hangleChange = (e) => {\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n\n\n    render() {\n        const {classes} = this.props \n        const {errors, loading} = this.state\n        return (\n           <Grid container className={classes.form}>\n               <Grid item sm />\n               <Grid item sm>\n                    <img src={AppIcon} alt=\"monkey\" width=\"50%\" height=\"50%\" className={classes.image} />\n                    <Typography variant=\"h4\" className={classes.pageTitle}>Sign Up</Typography>\n                    <form noValidate onSubmit={this.handleSubmit}>\n                        <TextField\n                         id=\"email\"\n                         name=\"email\"\n                          type=\"email\"\n                           label=\"Email\"\n                            className={classes.textField}\n\n                        value={this.state.email}\n                         onChange={this.hangleChange}\n                         helperText={errors.email}\n                         error={errors.email ? true: false}\n                          fullWidth />\n                    \n                    <TextField\n                     id=\"password\"\n                      name=\"password\"\n                       type=\"password\"\n                        label=\"Password\"\n                         className={classes.textField}\n                        value={this.state.password}\n                         onChange={this.hangleChange}\n                         helperText={errors.password}\n                         error={errors.password ? true: false}\n                          fullWidth />\n                    <TextField\n                     id=\"password2\"\n                      name=\"confirmPassword\"\n                       type=\"password\"\n                        label=\"Confirm Password\"\n                         className={classes.textField}\n                        value={this.state.confirmPassword}\n                         onChange={this.hangleChange}\n                         helperText={errors.password}\n                         error={errors.password ? true: false}\n                          fullWidth />\n                    \n                    <TextField\n                     id=\"handle\"\n                      name=\"handle\"\n                       type=\"text\"\n                        label=\"Handle\"\n                         className={classes.textField}\n                        value={this.state.handle}\n                         onChange={this.hangleChange}\n                         helperText={errors.handle}\n                         error={errors.password ? true: false}\n                          fullWidth />\n\n                    {errors.general && (\n                        <Typography variant=\"body2\" className={classes.customError}>\n                            {errors.general}\n                        </Typography>\n                    )}\n                    <Button type=\"submit\" variant=\"contained\" color=\"primary\" disabled={loading}  className={classes.button}>\n                        Sign up\n                        {loading && (\n                            <CircularProgress size={30} className={classes.progress} />\n                        )}\n                        </Button>\n                    <br />\n                    <small className=\"small\" >Have an account ? Login <Link to=\"/login\">Here</Link>  </small>\n                    </form>\n               </Grid>\n               <Grid item sm />\n           </Grid>\n        )\n    }\n}\n\nsignup.propTypes = {\n    classes: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.user.token\n    }\n}\n\nconst mapDispatchToProps  = dispatch => {\n    return {\n        signup: (email, password, confirmPassword, handle) => dispatch(SignUP(email, password, confirmPassword, handle))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(signup))\n","/home/metro/Desktop/projects/soica-media/src/components/Navbar.js",[],"/home/metro/Desktop/projects/soica-media/src/components/Scream.js",["85","86","87"],"import React, {Component} from 'react'\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Card from '@material-ui/core/Card';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typorgraphy from '@material-ui/core/Typography'\nimport {Link} from 'react-router-dom'\nimport dayjs from 'dayjs'\nimport relativeTime from 'dayjs/plugin/relativeTime'\n\nconst styles = {\n    card: {\n        display: 'flex',\n        marginBotttom: 20,\n\n    },\n    image: {\n        minWidth: 200,\n    },\n    content:{\n        padding: 25,\n        objectFit: 'cover'\n\n    }\n\n\n}\n\nclass Scream extends Component {\n    render() {\n        dayjs.extend(relativeTime)\n        const {classes} = this.props\n        const {userImage, body, commentCount, createAt, likeCount, screemId, userHandle} = this.props.scream\n        console.log(this.props.scream)\n        return (\n            <Card className={classes.card} >\n                <CardMedia image={userImage} title=\"Profile image\" className={classes.image} />\n                <CardContent className={classes.content} >\n                    <Typorgraphy variant=\"h5\" component={Link} to={`/users/${userHandle}`} color=\"primay\"  >{userHandle }</Typorgraphy>\n                    <Typorgraphy variant=\"body2\" color=\"textSecondary\">{dayjs(createAt).fromNow()}</Typorgraphy>\n                    <Typorgraphy variant=\"body1\">{body}</Typorgraphy>\n                </CardContent>\n            </Card>\n\n        )\n\n    }\n}\n\nexport default withStyles(styles)(Scream)","/home/metro/Desktop/projects/soica-media/src/utils/authRoute.js",[],"/home/metro/Desktop/projects/soica-media/src/store/reducers/user.js",["88"],"import React from 'react'\nimport {updateObj} from './urilits'\nimport * as actionTypes from '../actions/actionTypy'\n\n\nconst initualState= {\n    token: null,\n    error: null, \n    loading: false\n}\n\nconst authStart = (state, action) => {\n    return updateObj(state, {\n        loading: true,\n        error: null\n    } )\n}\n\nconst authSucess = (state, action) => {\n    return updateObj(state, {\n        token: action.token\n    })\n}\n\n\nconst authFail = (state, action) => {\n    return updateObj(state, {\n        token: action.error\n    })\n}\n\nconst reducer = (state=initualState, action) => {\n    switch(action.type){\n        case actionTypes.AUTH_START: return authStart(state, action)\n        case actionTypes.AUTH_SUCCESS: return authSucess(state, action)\n        case actionTypes.AUTH_FAIL: return authFail(state, action)\n        default:\n            return state\n    }\n}\n\nexport default reducer","/home/metro/Desktop/projects/soica-media/src/store/reducers/urilits.js",[],"/home/metro/Desktop/projects/soica-media/src/store/actions/actionTypy.js",[],"/home/metro/Desktop/projects/soica-media/src/store/actions/user.js",["89"],"import React from 'react'\nimport * as actionType from './actionTypy'\nimport axios from 'axios'\n\n\nexport const Auth_start = () => {\n    return {\n        type: actionType.AUTH_START\n    }\n}\n\nexport const Auth_Sucess = (token) => {\n    return {\n        type: actionType.AUTH_SUCCESS,\n        token: token\n    }\n}\n\nexport const Auth_Fail = (error) => {\n    return {\n        type: actionType.AUTH_FAIL,\n        error: error\n    }\n}\n\nexport const logout= () => {\n    localStorage.removeItem('IdToken')\n    return {\n        type: actionType.AUTH_LOGOUT\n    }\n}\n\n\n\nexport const authLogin = (email, password) => {\n    return dispatch => {\n        const userData = {\n            email: email,\n            password: password\n        }\n        console.log(userData)\n        dispatch(Auth_start)\n        axios.post('/login', userData )\n        .then(res => {\n            const IdToken = res.data.token\n            console.log(res.data)\n            localStorage.setItem('IdToken', `Bearer ${res.data.token}`);\n            dispatch(Auth_Sucess(IdToken))\n            this.props.history.push('/')\n        })\n       \n        .catch(err => {\n            dispatch(Auth_Fail(err))\n\n        })\n\n      \n        \n\n    }\n}\n\n\n\n\n\n\n\nexport const SignUP = (email, password, confirmPassword, handle) => {\n    return dispatch => {\n        const userData = {\n            email: email,\n            password: password,\n            confirmPassword: confirmPassword,\n            handle: handle\n        }\n        console.log(userData)\n        dispatch(Auth_start)\n        axios.post('/signup', userData )\n        .then(res => {\n            const IdToken = res.data.token\n            console.log(res.data)\n            localStorage.setItem('IdToken', `Bearer ${res.data.token}`);\n            dispatch(Auth_Sucess(IdToken))\n            this.props.history.push('/')\n        })\n       \n        .catch(err => {\n            dispatch(Auth_Fail(err))\n\n        })\n\n      \n        \n\n    }\n}","/home/metro/Desktop/projects/soica-media/src/store/reducers/data.js",["90"],"import React from 'react'\nimport {updateObj} from './urilits'\nimport * as actionType from '../actions/actionTypy'\n\n\nconst initalstate = {\n    data : {},\n    error: null,\n    loading: false\n}\n\n\nconst  dataStart = (state, action) => {\n    return updateObj(state, {\n        error: null,\n        loading: true\n    })\n}\n\nconst dataSucess = (state, action) => {\n    return updateObj(state, {\n        data: action.data,\n        error: null,\n        loading: false\n    })\n}\n\nconst dataFail = (state, action) => {\n    return updateObj(state, {\n        loading: false,\n        error: action.error\n    })\n}\n\n\nconst reducer = (state =initalstate, action ) => {\n    switch(action.type) {\n        case actionType.DATA_START: return dataStart(state, action)\n        case actionType.DATA_SUCESS: return dataSucess(state, action)\n        case actionType.DATA_FAIL: return dataFail(state, action)\n        default:\n            return state\n\n    }\n}\n\nexport default reducer ","/home/metro/Desktop/projects/soica-media/src/store/actions/data.js",["91","92"],"import React from 'react'\nimport * as actionTypes from './actionTypy'\nimport { instance } from './token'\n\nconst dataStart = () => {\n    return {\n        type: actionTypes.DATA_START\n    }\n}\n\nconst dataSucess = data => {\n    return {\n        type: actionTypes.DATA_SUCESS,\n        data: data\n    }\n}\n\nconst dataFail = error => {\n    return {\n        type: actionTypes.DATA_FAIL,\n        error: error\n\n    }\n}\n\n\nexport const fetchData = () => {\n    return dispatch => {\n        const token = localStorage.getItem(\"IdToken\")\n        dispatch(dataStart())\n        instance.get(\"/user\")\n        .then(res => {\n            console.log(res.data)\n            dispatch(dataSucess(res.data))\n            \n        })\n        .catch(err => {\n            console.log(err)\n            dispatch(dataFail(err))\n        })\n\n    }\n}","/home/metro/Desktop/projects/soica-media/src/store/actions/token.js",[],"/home/metro/Desktop/projects/soica-media/src/components/profile.js",["93","94","95","96","97","98","99","100","101","102","103","104"],{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","severity":1,"message":"110","line":10,"column":8,"nodeType":"111","messageId":"112","endLine":10,"endColumn":13},{"ruleId":"109","severity":1,"message":"113","line":11,"column":8,"nodeType":"111","messageId":"112","endLine":11,"endColumn":20},{"ruleId":"109","severity":1,"message":"114","line":9,"column":8,"nodeType":"111","messageId":"112","endLine":9,"endColumn":13},{"ruleId":"109","severity":1,"message":"114","line":9,"column":8,"nodeType":"111","messageId":"112","endLine":9,"endColumn":13},{"ruleId":"109","severity":1,"message":"115","line":33,"column":33,"nodeType":"111","messageId":"112","endLine":33,"endColumn":45},{"ruleId":"109","severity":1,"message":"116","line":33,"column":57,"nodeType":"111","messageId":"112","endLine":33,"endColumn":66},{"ruleId":"109","severity":1,"message":"117","line":33,"column":68,"nodeType":"111","messageId":"112","endLine":33,"endColumn":76},{"ruleId":"109","severity":1,"message":"118","line":1,"column":8,"nodeType":"111","messageId":"112","endLine":1,"endColumn":13},{"ruleId":"109","severity":1,"message":"118","line":1,"column":8,"nodeType":"111","messageId":"112","endLine":1,"endColumn":13},{"ruleId":"109","severity":1,"message":"118","line":1,"column":8,"nodeType":"111","messageId":"112","endLine":1,"endColumn":13},{"ruleId":"109","severity":1,"message":"118","line":1,"column":8,"nodeType":"111","messageId":"112","endLine":1,"endColumn":13},{"ruleId":"109","severity":1,"message":"119","line":29,"column":15,"nodeType":"111","messageId":"112","endLine":29,"endColumn":20},{"ruleId":"109","severity":1,"message":"120","line":2,"column":8,"nodeType":"111","messageId":"112","endLine":2,"endColumn":17},{"ruleId":"109","severity":1,"message":"121","line":5,"column":8,"nodeType":"111","messageId":"112","endLine":5,"endColumn":14},{"ruleId":"109","severity":1,"message":"122","line":6,"column":8,"nodeType":"111","messageId":"112","endLine":6,"endColumn":18},{"ruleId":"109","severity":1,"message":"123","line":7,"column":8,"nodeType":"111","messageId":"112","endLine":7,"endColumn":18},{"ruleId":"109","severity":1,"message":"124","line":8,"column":8,"nodeType":"111","messageId":"112","endLine":8,"endColumn":16},{"ruleId":"109","severity":1,"message":"125","line":9,"column":8,"nodeType":"111","messageId":"112","endLine":9,"endColumn":21},{"ruleId":"109","severity":1,"message":"126","line":10,"column":10,"nodeType":"111","messageId":"112","endLine":10,"endColumn":18},{"ruleId":"109","severity":1,"message":"110","line":11,"column":8,"nodeType":"111","messageId":"112","endLine":11,"endColumn":13},{"ruleId":"109","severity":1,"message":"127","line":12,"column":8,"nodeType":"111","messageId":"112","endLine":12,"endColumn":13},{"ruleId":"109","severity":1,"message":"128","line":13,"column":8,"nodeType":"111","messageId":"112","endLine":13,"endColumn":16},{"ruleId":"109","severity":1,"message":"129","line":14,"column":9,"nodeType":"111","messageId":"112","endLine":14,"endColumn":13},{"ruleId":"109","severity":1,"message":"130","line":72,"column":16,"nodeType":"111","messageId":"112","endLine":72,"endColumn":23},"no-native-reassign",["131"],"no-negated-in-lhs",["132"],"no-unused-vars","'dayjs' is defined but never used.","Identifier","unusedVar","'relativeTime' is defined but never used.","'axios' is defined but never used.","'commentCount' is assigned a value but never used.","'likeCount' is assigned a value but never used.","'screemId' is assigned a value but never used.","'React' is defined but never used.","'token' is assigned a value but never used.","'PropTypes' is defined but never used.","'Button' is defined but never used.","'Typography' is defined but never used.","'LocationOn' is defined but never used.","'LinkIcon' is defined but never used.","'CalendarToday' is defined but never used.","'Redirect' is defined but never used.","'Paper' is defined but never used.","'MuilLink' is defined but never used.","'Link' is defined but never used.","'classes' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]